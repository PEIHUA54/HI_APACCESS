1.不引入 那兩句的話可以嗎?
2. 查詢人員權限 按下查詢後 查詢結果顯示內容 =>員工編號、員工姓名、所屬群組、員工部門、員工職稱
一行完成就好 盡量減少空間使用
然後直接帶該群組權限，不用按下檢視該群組權限
3.查詢人員權限 的輸入框 跟選擇群組 的下拉選單 盡量對齊
4.新增使用者 的modal 打不開 因為Select2 is not a function報錯
可以用別的寫法不用.select2 因為還要引用 怕版本不符合

@using HI_APACCESS.Service;

@{
    ViewBag.Title = "群組權限管理";
    HI_APACCESS.Controllers.HI_APACCESSBaseController controller = ViewContext.Controller as HI_APACCESS.Controllers.HI_APACCESSBaseController;
    var emp_APG_NO = controller.APG_NO;
    var emp_no = controller.Emp_NO;
}

<link rel="stylesheet" href="@Url.Version("Form.css","CSS")" />
<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />

<style>
    .management-section {
        background: white;
        border: 1px solid #dee2e6;
        border-radius: 8px;
        padding: 15px;
        height: 700px;
        overflow-y: auto;
    }

    .section-header {
        background: #f8f9fa;
        margin: -15px -15px 15px -15px;
        padding: 12px 15px;
        border-bottom: 1px solid #dee2e6;
        font-weight: bold;
        color: #495057;
        position: sticky;
        top: -15px;
        z-index: 10;
    }

    .user-item {
        padding: 8px 12px;
        margin: 5px 0;
        border: 1px solid #e9ecef;
        border-radius: 4px;
        background: #f8f9fa;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .page-item:hover {
        background-color: #e9ecef !important;
    }

    .page-item.has-permission {
        background: #e8f5e8;
        border-color: #28a745;
    }

    /* 按鈕權限項目樣式*/
    .btn-item {
        padding: 8px 12px;
        margin: 5px 0;
        border: 1px solid #e9ecef;
        border-radius: 4px;
        background: white;
        cursor: pointer;
        user-select: none;
        transition: all 0.2s;
    }

        .btn-item:hover {
            background-color: #f0f8ff !important;
        }

        .btn-item.has-permission {
            background: #e3f2fd;
            border-color: #2196f3;
        }

    .page-item, .btn-item {
        padding: 8px 12px;
        margin: 5px 0;
        border: 1px solid #e9ecef;
        border-radius: 4px;
        background: #f8f9fa;
        cursor: pointer;
        user-select: none;
        transition: all 0.2s;
        display: block;
    }

        .page-item:hover, .btn-item:hover {
            background-color: #e9ecef !important;
        }

        .page-item.has-permission {
            background: #e8f5e8;
            border-color: #28a745;
            line-height: 1.4;
        }

        .page-item.parent-page {
            background: #fff3e0 !important;
            border-color: #ff9800;
            border-left: 4px solid #ff9800;
            line-height: 1.4;
        }

            .page-item.parent-page:hover {
                background-color: #ffe0b2 !important;
            }

            .page-item.parent-page.has-permission {
                background: #fff3e0 !important; /* 改為保持橘色，不變綠色 */
                border-color: #ff9800; /* 改為保持橘色邊框 */
                border-left: 4px solid #ff9800; /* 改為保持橘色左邊框 */
            }

        .btn-item.has-permission {
            background: #e3f2fd;
            border-color: #2196f3;
        }

    .permission-content {
        display: flex;
        align-items: center;
        width: 100%;
        gap: 12px; /* 使用 gap 來設定間距 */
    }

    .permission-checkbox {
        margin: 0 !important;
        padding: 0 !important;
        pointer-events: none; /* 防止直接點擊checkbox，統一由父元素處理 */
        flex-shrink: 0;
        width: 16px !important;
        height: 16px !important;
        cursor: pointer;
        transform: scale(1) !important; /* 確保checkbox不會被放大 */
        -webkit-transform: scale(1) !important;
        -moz-transform: scale(1) !important;
        vertical-align: middle;
        box-sizing: border-box !important;
        -webkit-appearance: checkbox !important;
        -moz-appearance: checkbox !important;
        appearance: checkbox !important;
    }

    .permission-title {
        font-weight: bold;
        flex: 1; /* 占剩餘空間 */
        min-width: 0; /* 允許縮小 */
    }

    .permission-info {
        font-size: 12px;
        color: #6c757d;
        flex-shrink: 0; /* 不縮小 */
    }

    /* 權限管理區域包框樣式 - 有明顯框線 */
    .permission-wrapper {
        border: 2px solid #ffb74d; /* 改為淺橘色 */
        border-radius: 8px;
        padding: 5px;
        background: #fafafa;
        margin-bottom: 50px;
        box-shadow: 0 2px 8px rgba(255, 183, 77, 0.15);
    }

    .permission-wrapper-header {
        background: #fff3e0; /* 淺橘色背景 */
        margin: -10px -10px 20px -20px;
        padding: 10px 10px;
        border-bottom: 2px solid #ffb74d;
        font-weight: bold;
        color: #f57c00; /* 橘色文字 */
        border-radius: 6px 6px 0 0;
    }

    /* 確保高度對齊 */
    .management-section {
        height: 750px; /* 統一高度 */
    }

    .group-selector {
        background: white;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        margin-bottom: 20px;
    }

    .btn-small {
        padding: 2px 8px;
        font-size: 12px;
    }

    .no-data {
        text-align: center;
        color: #6c757d;
        font-style: italic;
        padding: 40px 20px;
    }

    /* 儲存提醒樣式 */
    .save-reminder {
        background: #fff3cd;
        border: 1px solid #ffeaa7;
        color: #856404;
        padding: 3px;
        border-radius: 5px;
        margin-bottom: 2px;
        display: none;
    }

        .save-reminder .fa-exclamation-triangle {
            color: #f39c12;
            margin-right: 8px;
        }

    /* 階層顯示樣式 */
    .parent-page-header {
        background: #e3f2fd;
        border: 1px solid #2196f3;
        border-radius: 4px;
        padding: 10px 15px;
        margin: 10px 0 5px 0;
        font-weight: bold;
        color: #1976d2;
        font-size: 14px;
        line-height: 1.4;
    }

    .child-page-item {
        margin-left: 20px;
        position: relative;
    }

        .child-page-item::before {
            content: "└─";
            position: absolute;
            left: -20px;
            color: #6c757d;
            font-family: monospace;
        }

    /* Modal表格對齊 */
    .modal-body .form-group label {
        font-weight: 600;
        margin-bottom: 5px;
        display: block;
    }

    .modal-body .form-control {
        width: 100%;
        margin-bottom: 10px;
    }

    .modal-body .row {
        margin-left: -10px;
        margin-right: -10px;
    }

    .modal-body .col-md-6 {
        padding-left: 10px;
        padding-right: 10px;
    }
</style>


<section class="page-title">
    <div class="triangle"></div>
    <div class="title-text">系統群組權限管理 : @ViewBag.SystemId</div>
</section>

<div class="container-fluid">
    <!-- 查詢功能區 -->
    <div class="search-section" style="background: #f8f9fa; padding: 15px; border-radius: 6px; margin-bottom: 20px;">
        <div class="row align-items-center">
            <div class="col-md-2">
                <label class="form-label mb-0"><strong>查詢人員權限：</strong></label>
            </div>
            <div class="col-md-4">
                <div class="input-group">
                    <input type="text" class="form-control" id="searchUserId" placeholder="請輸入員工編號">
                    <div class="input-group-append">
                        <button type="button" class="btn btn-info" onclick="searchUserPermissions()">
                            <i class="fas fa-search"></i> 查詢
                        </button>
                    </div>
                </div>
            </div>
            <div class="col-md-2">
                <button type="button" class="btn btn-secondary" onclick="clearSearch()">
                    <i class="fas fa-times"></i> 清除
                </button>
            </div>
        </div>
    </div>

    <!-- 查詢結果顯示區 -->
    <div id="searchResult" style="display: none; background: #e3f2fd; padding: 15px; border-radius: 6px; margin-bottom: 20px;">
        <h6><i class="fas fa-user"></i> 查詢結果</h6>
        <div id="searchResultContent"></div>
    </div>

    <!-- 群組選擇區 -->
    <div class="group-selector">
        <div class="row align-items-center">
            <div class="col-md-3">
                <label for="groupSelect" class="form-label mb-0"><strong>選擇群組：</strong></label>
            </div>
            <div class="col-md-4">
                <select class="form-control" id="groupSelect" onchange="loadGroupData()">
                    <option value="">-- 請選擇群組 --</option>
                </select>
            </div>
            <div class="col-md-3">
                <button type="button" class="btn btn-primary" onclick="openGroupModal()">
                    <i class="fas fa-plus"></i>
                    新增群組
                </button>
                <button type="button" class="btn btn-secondary" id="editGroupBtn" onclick="editGroup()" disabled>
                    修改
                </button>
                <button type="button" class="btn btn-danger" id="deleteGroupBtn" onclick="deleteGroup()" disabled>
                    刪除
                </button>
            </div>
        </div>
    </div>

    <!-- 三個管理區塊 -->
    <div class="row">
        <!-- 左邊：管理使用者 -->
        <div class="col-md-4">
            <!-- 上方留空區域，與權限區塊對齊 -->
            @*<div style="height: 26px; margin-bottom: 20px;"></div>*@
            <div class="management-section">
                <div class="section-header">
                    <i class="fas fa-users"></i> 管理使用者
                    <button type="button" class="btn btn-primary" onclick="openUserModal()" id="addUserBtn" disabled>
                        <i class="fas fa-plus"></i>
                        新增使用者
                    </button>
                </div>
                <div id="userList">
                    <div class="no-data">請先選擇群組</div>
                </div>
            </div>
        </div>

        <div class="col-md-8">
            <div class="permission-wrapper">
                <!-- 儲存提醒與按鈕同一列 -->
                <div class="row align-items-center mb-3">
                    <div class="col-md-10">
                        <div class="save-reminder" id="saveReminder">
                            <i class="fas fa-exclamation-triangle"></i>
                            <strong>注意！</strong> 已修改權限設定，請記得「儲存權限」！
                        </div>
                    </div>
                    <div class="col-md-2">
                        <button type="button" class="btn btn-success" onclick="saveAllPermissions()" id="saveAllBtn" disabled>
                            <i class="fas fa-save"></i> 儲存權限
                        </button>
                    </div>
                </div>

                <!-- 權限管理的兩個區塊 -->
                <div class="row">
                    <!-- 中間：管理頁面權限 -->
                    <div class="col-md-6">
                        <div class="management-section">
                            <div class="section-header">
                                <i class="fas fa-file-alt"></i> 管理頁面權限
                            </div>
                            <div id="pageList">
                                <div class="no-data">請先選擇群組</div>
                            </div>
                        </div>
                    </div>

                    <!-- 右邊：管理按鈕權限 -->
                    <div class="col-md-6">
                        <div class="management-section">
                            <div class="section-header">
                                <i class="fas fa-mouse-pointer"></i> 管理按鈕權限
                            </div>
                            <div id="buttonList">
                                <div class="no-data">請先選擇群組</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- 群組 Modal -->
<div class="modal fade" id="groupModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="groupModalTitle">新增群組</h5>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <form id="groupForm">
                    <div class="form-group">
                        <label for="groupNo">群組編號</label>
                        <input type="text" class="form-control" id="groupNo" readonly>
                    </div>
                    <div class="form-group">
                        <label for="groupName">群組名稱 <span class="text-danger">*</span></label>
                        <input type="text" class="form-control" id="groupName" required>
                    </div>
                    <div class="form-group">
                        <label>主管群組代號</label>
                        <div class="border p-3" style="max-height: 200px; overflow-y: auto; background-color: #f8f9fa;">
                            <div id="parentGroupList">
                                <div class="text-center text-muted">載入中...</div>
                            </div>
                        </div>
                        <small class="form-text text-muted">可複選</small>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" onclick="saveGroup()">儲存</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">取消</button>
            </div>
        </div>
    </div>
</div>

<!-- 使用者 Modal -->
<div class="modal fade" id="userModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">新增使用者</h5>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <form id="userForm">
                    <div class="form-group">
                        <label for="userIdSelect">員工編號 <span class="text-danger">*</span></label>
                        <select class="form-control" id="userIdSelect" style="width: 100%;" required>
                            <option value="">-- 請選擇或輸入員工編號 --</option>
                        </select>
                        <small class="form-text text-muted">
                            可直接輸入員工編號搜尋，例如輸入 "3B7" 會顯示所有相關編號 (3B750、3B777...)
                        </small>
                    </div>
                    <div class="form-group">
                        <label for="userName">員工姓名 <span class="text-danger">*</span></label>
                        <input type="text" class="form-control" id="userName" readonly style="background-color: #f8f9fa;">
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="userDept">部門</label>
                                <input type="text" class="form-control" id="userDept" readonly style="background-color: #f8f9fa;">
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="userPost">階職</label>
                                <input type="text" class="form-control" id="userPost" readonly style="background-color: #f8f9fa;">
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" onclick="saveUser()">儲存</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">取消</button>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

@section Scripts {
    <script>
        let currentGroup = '';
        let isEditMode = false;
        let allFunctions = [];
        let groupPermissions = {};
        let hasUnsavedChanges = false;

        // 頁面載入時允許搜尋
        $(document).ready(function () {
            loadGroups();
            loadAllFunctions();

            // 支援 Enter 鍵搜尋
            $('#searchUserId').on('keypress', function (e) {
                if (e.which === 13) {
                    searchUserPermissions();
                }
            });
        });

        // 顯示/隱藏 儲存提醒
        function showSaveReminder() {
            $('#saveReminder').show();
            hasUnsavedChanges = true;
        }

        function hideSaveReminder() {
            $('#saveReminder').hide();
            hasUnsavedChanges = false;
        }

       //  載入群組下拉選單 loadGroups 函數支援 callback
        function loadGroups(callback) {
            $.get('@Url.Action("GetGroupSelectList", "AP")', function (response) {
                let options = '<option value="">– 請選擇群組 –</option>';

                if (Array.isArray(response)) {
                    response.forEach(function (group) {
                        options += `<option value="${group.value}">${group.text}</option>`;
                    });
                } else {
                    console.log('群組資料格式錯誤:', response);
                    options += '<option value="">-- 載入失敗 --</option>';
                }

                $('#groupSelect').html(options);

                if (callback) callback();

            }).fail(function (xhr, status, error) {
                console.log('載入群組失敗:', error);
                $('#groupSelect').html('<option value="">-- 載入失敗 --</option>');
            });
        }

        // 載入所有頁面
        function loadAllFunctions() {
            $.get('@Url.Action("GetAllFunctions", "AP")', function (response) {
                if (response.success) {
                    allFunctions = response.data || [];
                    //console.log('後端返回的數據順序:');
                    allFunctions.forEach((f, index) => {
                        console.log(`${index}: ${f.FUNC_ID} - ${f.FUNC_NA} (Parent: ${f.PARENT_ID}, Sort: ${f.SORT_NO})`);
                    });
                } else {
                    allFunctions = [];
                }
            });
        }

        // 載入群組資料 loadGroupData 函數，啟用/停用刪除按鈕
        function loadGroupData() {
            const newGroup = $('#groupSelect').val();

            if (hasUnsavedChanges && currentGroup !== newGroup && currentGroup !== '') {
                if (!confirm('有未儲存的變更，切換群組將遺失這些變更。確定要繼續嗎？')) {
                    $('#groupSelect').val(currentGroup);
                    return;
                }
            }

            currentGroup = newGroup;
            hideSaveReminder();

            if (!currentGroup) {
                resetAllSections();
                return;
            }

            // 啟用所有按鈕
            $('#editGroupBtn, #addUserBtn, #saveAllBtn, #deleteGroupBtn').prop('disabled', false);

            loadUsers();
            loadPagePermissions();
        }

        // 重設所有區塊 resetAllSections 函數
        function resetAllSections() {
            // 停用所有按鈕
            $('#editGroupBtn, #addUserBtn, #saveAllBtn, #deleteGroupBtn').prop('disabled', true);
            $('#userList').html('<div class="no-data">請先選擇群組</div>');
            $('#pageList').html('<div class="no-data">請先選擇群組</div>');
            $('#buttonList').html('<div class="no-data">請先選擇群組</div>');
            hideSaveReminder();
        }

        // 載入使用者列表
        function loadUsers() {
            $.get('@Url.Action("GetUsersByGroup", "AP")', { apg_no: currentGroup }, function (response) {
                if (response.success) {
                    let html = '';
                    if (response.data.length > 0) {
                        response.data.forEach(function (user) {
                            html += `
                                <div class="user-item">
                                    <div>
                                        <strong>${user.U_ID}</strong><br>
                                        <small>${user.U_NAME}</small>
                                    </div>
                                    <div>
                                        <button type="button"
                                                class="btn btn-sm btn-warning btn-small"
                                                onclick="openChangeGroupModal('${user.U_ID}', '${user.U_NAME}', '${currentGroup}')">
                                            變更群組
                                        </button>
                                        <button type="button"
                                                class="btn btn-sm btn-danger btn-small"
                                                onclick="deleteUser('${user.U_ID}', '${user.U_NAME}')">
                                            刪除
                                        </button>
                                    </div>
                                </div>`;
                        });
                    } else {
                        html = '<div class="no-data">此群組暫無使用者</div>';
                    }
                    $('#userList').html(html);
                }
            });
        }

        // 載入頁面權限
        function loadPagePermissions() {
            $.get('@Url.Action("GetGroupPermissions", "AP")', { apg_no: currentGroup }, function (response) {
                if (response.success) {
                    groupPermissions = {};
                    response.data.forEach(function (item) {
                        if (!groupPermissions[item.FUNC_ID]) {
                            groupPermissions[item.FUNC_ID] = {
                                hasPagePermission: item.HasPagePermission,
                                buttons: {}
                            };
                        }
                        item.ButtonPermissions.forEach(function (btn) {
                            groupPermissions[item.FUNC_ID].buttons[btn.BTNSEQ] = btn.HasPermission;
                        });
                    });

                    renderPageListHierarchical();
                    updateButtonListHierarchical(); // 這會顯示所有頁面的按鈕
                }
            });
        }

        // 輔助函數
        function getFuncId(func) {
            return func.FUNC_ID || func.value || func.func_id;
        }

        function getParentId(func) {
        return func.PARENT_ID || func.parent_id || func.parentId;
        }

        function getFuncName(func) {
        return func.FUNC_NA || func.text || func.func_na;
        }

        // 變更使用者群組Modal
        function openChangeGroupModal(userId, userName, currentGroup) {
            $('#changeGroupModal').remove(); // 先移除舊的（避免重覆）

            const modalHtml = `
                <div class="modal fade" id="changeGroupModal" tabindex="-1">
                  <div class="modal-dialog">
                    <div class="modal-content">
                      <div class="modal-header">
                        <h5 class="modal-title">變更使用者群組</h5>
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                      </div>
                      <div class="modal-body">
                        <div class="alert alert-info">
                          <strong>使用者：</strong> ${userName} (${userId})<br>
                          <strong>目前群組：</strong> ${currentGroup}
                        </div>
                        <form id="changeGroupForm">
                          <input type="hidden" id="changeUserId" value="${userId}">
                          <input type="hidden" id="changeCurrentGroup" value="${currentGroup}">
                          <div class="form-group">
                            <label for="newGroupSelect">選擇新群組 <span class="text-danger">*</span></label>
                            <select class="form-control" id="newGroupSelect" required>
                              <option value="">-- 請選擇新群組 --</option>
                            </select>
                          </div>
                        </form>
                      </div>
                      <div class="modal-footer">
                        <button type="button" class="btn btn-primary" onclick="confirmChangeGroup()">確認變更</button>
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">取消</button>
                      </div>
                    </div>
                  </div>
                </div>`;

            $('body').append(modalHtml);

            // 載入群組下拉（已由後端依 SYS_ID 篩選）
            $.get('@Url.Action("GetGroupSelectList", "AP")', function (response) {
                let options = '<option value="">-- 請選擇新群組 --</option>';
                if (Array.isArray(response)) {
                    response.forEach(function (group) {
                        if (group.value !== currentGroup) { // 排除目前群組
                            options += `<option value="${group.value}">${group.text}</option>`;
                        }
                    });
                }
                $('#newGroupSelect').html(options);
            });

            $('#changeGroupModal').modal('show');
        }

        // 變更使用者群組
        function confirmChangeGroup() {
            const userId = $('#changeUserId').val();
            const currentGroup = $('#changeCurrentGroup').val();
            const newGroup = $('#newGroupSelect').val();

            if (!newGroup) {
                alert('請選擇新群組');
                return;
            }
            if (newGroup === currentGroup) {
                alert('新群組與目前群組相同');
                return;
            }

            if (confirm(`確定要將使用者 ${userId} 從群組 ${currentGroup} 變更到 ${newGroup} 嗎？`)) {
                $.post('@Url.Action("ChangeUserGroup", "AP")', {
                    u_id: userId,
                    old_apg_no: currentGroup,
                    new_apg_no: newGroup
                }, function (response) {
                    if (response.success) {
                        alert(response.message || '使用者群組變更成功');
                        $('#changeGroupModal').modal('hide');
                        loadUsers(); // 重新載入清單
                    } else {
                        alert(response.message || '群組變更失敗');
                    }
                }).fail(function (xhr) {
                    alert('群組變更失敗：' + (xhr.responseText || '系統錯誤'));
                });
            }
        }

        // 檢查是否為父層頁面 (PARENT_ID=HOME 或無父級且有子頁面)
        function isParentPage(func) {
            const funcId = getFuncId(func);
            const parentId = getParentId(func);

            // 檢查是否為 HOME 層級的頁面
            if (parentId === 'HOME' || !parentId || parentId === '') {
                return true;
            }

            // 檢查是否有子頁面
            return allFunctions.some(f => getParentId(f) === funcId);
        }

        // 階層式渲染頁面列表
        function renderPageListHierarchical() {
            let html = '';
            if (allFunctions.length === 0) {
                html = '<div class="no-data">無可用頁面</div>';
            } else {
                // 只取顯示的頁面 (IS_SHOW = 'Y')
                const visibleFunctions = allFunctions.filter(f => f.IS_SHOW === 'Y');

                const parentPages = visibleFunctions.filter(f => !getParentId(f) || !visibleFunctions.some(p => getFuncId(p) === getParentId(f)));
                const childPages = visibleFunctions.filter(f => getParentId(f) && visibleFunctions.some(p => getFuncId(p) === getParentId(f)));

                parentPages.forEach(function (parentFunc) {
                    html += renderPageItem(parentFunc, false);
                    const children = childPages.filter(c => getParentId(c) === getFuncId(parentFunc));
                    children.forEach(function (childFunc) {
                        html += renderPageItem(childFunc, true);
                    });
                });
            }
            $('#pageList').html(html);
        }

        // 頁面項目渲染 - 一列顯示
        function renderPageItem(func, isChild) {
            const funcId = getFuncId(func);
            const funcName = getFuncName(func);

            const hasPermission = groupPermissions[funcId] && groupPermissions[funcId].hasPagePermission;
            const checkedAttr = hasPermission ? 'checked' : '';

            // 判斷是否為父層頁面並添加相應樣式
            const isParent = isParentPage(func);
            let itemClass = hasPermission ? 'page-item has-permission' : 'page-item';
            if (isParent) {
                itemClass += ' parent-page';
            }

            const childClass = isChild ? 'child-page-item' : '';

            return `
    <div class="${itemClass} ${childClass}" data-func-id="${funcId}" onclick="togglePagePermissionByClick('${funcId}')">
        <div class="permission-content">
            <input type="checkbox" class="permission-checkbox" ${checkedAttr}>
            <span class="permission-title">${funcName}</span>
            <span class="permission-info">頁面ID: ${funcId}</span>
        </div>
    </div>`;

        }

        // 點擊切換頁面權限
        function togglePagePermissionByClick(funcId) {
            const checkbox = $(`.page-item[data-func-id="${funcId}"] input[type="checkbox"]`);
            const isChecked = checkbox.prop('checked');
            checkbox.prop('checked', !isChecked);
            togglePagePermission(funcId, !isChecked);
        }

        // 切換頁面權限
        function togglePagePermission(funcId, hasPermission) {
            if (!groupPermissions[funcId]) {
                groupPermissions[funcId] = { buttons: {} };
            }
            groupPermissions[funcId].hasPagePermission = hasPermission;

            showSaveReminder();

            if (hasPermission) {
                // 勾選頁面時，自動全勾該頁面的所有按鈕
                $.get('@Url.Action("GetButtonsByFuncId", "AP")', { func_id: funcId }, function (btnResponse) {
                    if (btnResponse.success && btnResponse.data) {
                        if (!groupPermissions[funcId]) {
                            groupPermissions[funcId] = { buttons: {} };
                        }
                        btnResponse.data.forEach(function (btn) {
                            groupPermissions[funcId].buttons[btn.BTNSEQ] = true;
                        });
                        refreshButtonsDisplay(funcId);   // 只刷新這個頁面的按鈕顯示
                        showSaveReminder();
                    }
                });

                if (isParentPage(allFunctions.find(f => getFuncId(f) === funcId))) {
                    const childPages = allFunctions.filter(f => getParentId(f) === funcId);
                    childPages.forEach(function (childFunc) {
                        const childId = getFuncId(childFunc);
                        if (!groupPermissions[childId]) {
                            groupPermissions[childId] = { buttons: {} };
                        }
                        groupPermissions[childId].hasPagePermission = true;
                        $(`.page-item[data-func-id="${childId}"] input[type="checkbox"]`).prop('checked', true);
                        $(`.page-item[data-func-id="${childId}"]`).addClass('has-permission');

                        // 自動勾選該子頁面的所有按鈕權限
                        $.get('@Url.Action("GetButtonsByFuncId", "AP")', { func_id: childId }, function (btnResponse) {
                            if (btnResponse.success && btnResponse.data) {
                                btnResponse.data.forEach(function (btn) {
                                    groupPermissions[childId].buttons[btn.BTNSEQ] = true;
                                });
                            }
                        });
                    });
                }

                const currentPage = allFunctions.find(f => getFuncId(f) === funcId);
                if (currentPage && getParentId(currentPage)) {
                    const parentExists = allFunctions.some(f => getFuncId(f) === getParentId(currentPage));
                    if (parentExists) {
                        const parentId = getParentId(currentPage);
                        if (!groupPermissions[parentId]) {
                            groupPermissions[parentId] = { buttons: {} };
                        }
                        if (!groupPermissions[parentId].hasPagePermission) {
                            groupPermissions[parentId].hasPagePermission = true;
                            $(`.page-item[data-func-id="${parentId}"] input[type="checkbox"]`).prop('checked', true);
                            $(`.page-item[data-func-id="${parentId}"]`).addClass('has-permission');
                            alert(`已自動勾選上層頁面權限：${parentId}`);
                        }
                    }
                }
            } else {
                const childPages = allFunctions.filter(f => getParentId(f) === funcId);
                const hasChildWithPermission = childPages.some(child =>
                    groupPermissions[getFuncId(child)] && groupPermissions[getFuncId(child)].hasPagePermission
                );

                if (hasChildWithPermission) {
                    const childNames = childPages
                        .filter(child => groupPermissions[getFuncId(child)] && groupPermissions[getFuncId(child)].hasPagePermission)
                        .map(child => getFuncName(child))
                        .join('、');

                    if (!confirm(`取消此頁面權限將同時取消子頁面權限：${childNames}\n\n確定要繼續嗎？`)) {
                        $(`.page-item[data-func-id="${funcId}"] input[type="checkbox"]`).prop('checked', true);
                        return;
                    } else {
                        childPages.forEach(child => {
                            const childId = getFuncId(child);
                            if (groupPermissions[childId] && groupPermissions[childId].hasPagePermission) {
                                groupPermissions[childId].hasPagePermission = false;
                                groupPermissions[childId].buttons = {};
                                $(`.page-item[data-func-id="${childId}"] input[type="checkbox"]`).prop('checked', false);
                                $(`.page-item[data-func-id="${childId}"]`).removeClass('has-permission');
                            }
                        });
                    }
                }

                groupPermissions[funcId].buttons = {};
            }

            const pageItem = $(`.page-item[data-func-id="${funcId}"]`);
            if (hasPermission) {
                pageItem.addClass('has-permission');
            } else {
                pageItem.removeClass('has-permission');
            }

            updateButtonListHierarchical();
        }

        // 全勾選按鈕權限
        function selectAllButtons(funcId) {
            if (!groupPermissions[funcId]) {
                groupPermissions[funcId] = { buttons: {} };
            }

            $.get('@Url.Action("GetButtonsByFuncId", "AP")', { func_id: funcId }, function (response) {
                if (response.success && response.data) {
                    response.data.forEach(function (btn) {
                        groupPermissions[funcId].buttons[btn.BTNSEQ] = true;
                    });
                    // 只更新該頁面的按鈕顯示狀態，不重新排序
                    refreshButtonsDisplay(funcId);
                    showSaveReminder();
                }
            });
        }

        // 全取消按鈕權限
        function clearAllButtons(funcId) {
            if (!groupPermissions[funcId]) {
                groupPermissions[funcId] = { buttons: {} };
            }

            $.get('@Url.Action("GetButtonsByFuncId", "AP")', { func_id: funcId }, function (response) {
                if (response.success && response.data) {
                    response.data.forEach(function (btn) {
                        groupPermissions[funcId].buttons[btn.BTNSEQ] = false;
                    });
                    // 只更新該頁面的按鈕顯示狀態，不重新排序
                    refreshButtonsDisplay(funcId);
                    showSaveReminder();
                }
            });
        }

        // 階層式更新按鈕列表
        function updateButtonListHierarchical() {
            if (allFunctions.length === 0) {
                $('#buttonList').html('<div class="no-data">無可用頁面</div>');
                return;
            }

            // 建立父子關係映射
            const parentChildMap = {};
            const parentPages = [];

            // 分離父頁面和子頁面，並過濾隱藏的子頁面
            allFunctions.forEach(func => {
                const funcId = getFuncId(func);
                const parentId = getParentId(func);

                if (!parentId || parentId === '' || parentId === 'HOME') {
                    // 父頁面
                    parentPages.push(func);
                    if (!parentChildMap[funcId]) {
                        parentChildMap[funcId] = [];
                    }
                } else {
                    // 子頁面 - 只要顯示的子頁面
                    if (func.IS_SHOW === 'Y') {
                        if (!parentChildMap[parentId]) {
                            parentChildMap[parentId] = [];
                        }
                        parentChildMap[parentId].push(func);
                    }
                }
            });

            // 父頁面按SORT_NO排序
            parentPages.sort((a, b) => {
                const aSort = parseInt(a.SORT_NO) || 999;
                const bSort = parseInt(b.SORT_NO) || 999;
                return aSort - bSort;
            });

            // 每個父頁面的子頁面按SORT_NO排序
            Object.keys(parentChildMap).forEach(parentId => {
                parentChildMap[parentId].sort((a, b) => {
                    const aSort = parseInt(a.SORT_NO) || 999;
                    const bSort = parseInt(b.SORT_NO) || 999;
                    return aSort - bSort;
                });
            });

            let html = '';

            // 按父頁面順序顯示
            parentPages.forEach(parentFunc => {
                const parentId = getFuncId(parentFunc);
                const parentName = getFuncName(parentFunc);
                const children = parentChildMap[parentId] || [];

                // 父頁面標題
                html += `
        <div class="parent-page-header" id="parent-header-${parentId}">
            <i class="fas fa-folder"></i> ${parentName}
            <small class="text-muted" style="font-weight: normal; margin-left: 10px;">(${parentId})</small>
        </div>`;

                // 父頁面區塊（包含父頁面本身的按鈕）
                const parentHasPagePermission = groupPermissions[parentId] && groupPermissions[parentId].hasPagePermission;
                const parentSectionStyle = parentHasPagePermission
                    ? 'margin-bottom: 15px; border: 1px solid #dee2e6; border-radius: 6px; background: #f8f9fa; margin-left: 20px;'
                    : 'margin-bottom: 15px; border: 1px solid #dee2e6; border-radius: 6px; background: #f5f5f5; opacity: 0.6; margin-left: 20px;';

                html += `
        <div class="page-section parent-section" id="page-section-${parentId}" style="${parentSectionStyle}">
            <div class="page-header" style="background: #e9ecef; padding: 10px 15px; border-bottom: 1px solid #dee2e6; font-weight: bold; color: #495057; display: flex; justify-content: space-between; align-items: center;">
                <span>
                    <i class="fas fa-folder-open"></i> ${parentName}
                    <small class="text-muted" style="font-weight: normal; margin-left: 10px;">(${parentId})</small>
                </span>
                <div style="display: flex; gap: 5px;">
                    <button type="button" class="btn btn-sm btn-primary" onclick="selectAllButtons('${parentId}')" style="font-size: 11px; padding: 2px 8px;" ${!parentHasPagePermission ? 'disabled' : ''}>
                        <i class="fas fa-check-square"></i> 全勾選
                    </button>
                    <button type="button" class="btn btn-sm btn-secondary" onclick="clearAllButtons('${parentId}')" style="font-size: 11px; padding: 2px 8px;" ${!parentHasPagePermission ? 'disabled' : ''}>
                        <i class="fas fa-square"></i> 全取消
                    </button>
                </div>
            </div>
            <div class="buttons-container" id="buttons-${parentId}" style="padding: 10px;">
                <div class="no-data"><i class="fas fa-spinner fa-spin"></i> 載入中...</div>
            </div>`;

                // 如果有子頁面，在父層區塊內加入分隔線，然後繼續在同一個區塊內顯示子頁面
                if (children.length > 0) {
                    html += `
            <div style="margin: 10px 15px; border-top: 2px solid #6c757d; position: relative;">
                <div style="position: absolute; top: -10px; left: 50%; transform: translateX(-50%); background: #f8f9fa; padding: 0 10px; color: #6c757d; font-size: 12px; font-weight: bold;">

                </div>
            </div>`;

                    // 在同一個父層區塊內顯示子頁面
                    children.forEach(childFunc => {
                        const funcId = getFuncId(childFunc);
                        const funcName = getFuncName(childFunc);
                        const hasPagePermission = groupPermissions[funcId] && groupPermissions[funcId].hasPagePermission;

                        html += `
                <div class="child-page-section" style="margin: 10px; border: 1px solid #ccc; border-radius: 4px; background: ${hasPagePermission ? '#fff' : '#f5f5f5'}; ${!hasPagePermission ? 'opacity: 0.6;' : ''}">
                    <div class="page-header" style="background: #f1f3f4; padding: 8px 12px; border-bottom: 1px solid #ccc; font-weight: bold; color: #495057; display: flex; justify-content: space-between; align-items: center; font-size: 14px;">
                        <span>
                            <i class="fas fa-file-alt"></i> ${funcName}
                            <small class="text-muted" style="font-weight: normal; margin-left: 10px;">(${funcId})</small>
                        </span>
                        <div style="display: flex; gap: 5px;">
                            <button type="button" class="btn btn-sm btn-primary" onclick="selectAllButtons('${funcId}')" style="font-size: 10px; padding: 1px 6px;" ${!hasPagePermission ? 'disabled' : ''}>
                                <i class="fas fa-check-square"></i> 全勾選
                            </button>
                            <button type="button" class="btn btn-sm btn-secondary" onclick="clearAllButtons('${funcId}')" style="font-size: 10px; padding: 1px 6px;" ${!hasPagePermission ? 'disabled' : ''}>
                                <i class="fas fa-square"></i> 全取消
                            </button>
                        </div>
                    </div>
                    <div class="buttons-container" id="buttons-${funcId}" style="padding: 8px;">
                        <div class="no-data"><i class="fas fa-spinner fa-spin"></i> 載入中...</div>
                    </div>
                </div>`;
                    });
                }

                // 結束父頁面區塊
                html += `</div>`;
            });

            $('#buttonList').html(html);

            // 現在載入每個頁面的按鈕
            parentPages.forEach(parentFunc => {
                const parentId = getFuncId(parentFunc);
                const children = parentChildMap[parentId] || [];

                // 載入父頁面的按鈕
                loadButtonsForPage(parentId);

                // 載入子頁面的按鈕
                children.forEach(childFunc => {
                    loadButtonsForPage(getFuncId(childFunc));
                });
            });
        }

        // updateButtonListHierarchical：渲染頁面按鈕區塊
        function renderPageButtonSection(func, isChild) {
            const funcId = getFuncId(func);
            const funcName = getFuncName(func);
            const hasPagePermission = groupPermissions[funcId] && groupPermissions[funcId].hasPagePermission;

            // 頁面區塊樣式
            const sectionStyle = hasPagePermission
                ? 'margin-bottom: 15px; border: 1px solid #dee2e6; border-radius: 6px; background: #f8f9fa;' + (isChild ? ' margin-left: 20px;' : '')
                : 'margin-bottom: 15px; border: 1px solid #dee2e6; border-radius: 6px; background: #f5f5f5; opacity: 0.6;' + (isChild ? ' margin-left: 20px;' : '');

            return `
        <div class="page-section ${isChild ? 'child-section' : 'parent-section'}" id="page-section-${funcId}" style="${sectionStyle}">
            <div class="page-header" style="background: #e9ecef; padding: 10px 15px; border-bottom: 1px solid #dee2e6; font-weight: bold; color: #495057; display: flex; justify-content: space-between; align-items: center;">
                <span>
                    <i class="fas fa-file-alt"></i> ${funcName}
                    <small class="text-muted" style="font-weight: normal; margin-left: 10px;">(${funcId})</small>
                </span>
                <div style="display: flex; gap: 5px;">
                    <button type="button" class="btn btn-sm btn-primary" onclick="selectAllButtons('${funcId}')" style="font-size: 11px; padding: 2px 8px;" ${!hasPagePermission ? 'disabled' : ''}>
                        <i class="fas fa-check-square"></i> 全勾選
                    </button>
                    <button type="button" class="btn btn-sm btn-secondary" onclick="clearAllButtons('${funcId}')" style="font-size: 11px; padding: 2px 8px;" ${!hasPagePermission ? 'disabled' : ''}>
                        <i class="fas fa-square"></i> 全取消
                    </button>
                </div>
            </div>
            <div class="buttons-container" id="buttons-${funcId}" style="padding: 10px;">
                <div class="no-data"><i class="fas fa-spinner fa-spin"></i> 載入中...</div>
            </div>
        </div>`;
        }

        function loadButtonsForPage(funcId) {
            const hasPagePermission = groupPermissions[funcId] && groupPermissions[funcId].hasPagePermission;

            $.get('@Url.Action("GetButtonsByFuncId", "AP")', { func_id: funcId }, function (response) {
                let buttonHtml = '';

                if (response.success && response.data && response.data.length > 0) {
                    // 有按鈕時，使用正常的容器樣式
                    response.data.forEach(function (btn) {
                        const hasPermission = hasPagePermission && (groupPermissions[funcId].buttons[btn.BTNSEQ] || false);
                        const checkedAttr = hasPermission ? 'checked' : '';
                        const itemClass = hasPermission ? 'btn-item has-permission' : 'btn-item';
                        const disabled = !hasPagePermission ? 'style="opacity: 0.5; pointer-events: none;"' : '';

                        buttonHtml += `
                <div class="${itemClass}" onclick="toggleButtonPermissionByClick('${funcId}', '${btn.BTNSEQ}')" ${disabled}>
                    <div class="permission-content">
                        <input type="checkbox" class="permission-checkbox" ${checkedAttr} ${!hasPagePermission ? 'disabled' : ''}>
                        <span class="permission-title">${btn.BTN_NAME}</span>
                        <span class="permission-info">ID: ${btn.BTNID}</span>
                    </div>
                </div>`;
                    });

                    // 更新該頁面的按鈕容器 - 正常高度
                    $(`#buttons-${funcId}`).html(buttonHtml).css({
                        'padding': '10px',
                        'min-height': 'auto'
                    });
                } else {
                    // 沒有按鈕時，使用緊湊樣式
                    buttonHtml = '<div class="no-data-compact" style="padding: 8px; text-align: center; color: #6c757d; font-size: 12px;">此頁面無按鈕</div>';

                    // 更新該頁面的按鈕容器 - 緊湊高度
                    $(`#buttons-${funcId}`).html(buttonHtml).css({
                        'padding': '0',
                        'min-height': '30px'
                    });
                }
            }).fail(function () {
                // 載入失敗時也使用緊湊樣式
                const errorHtml = '<div class="no-data-compact" style="padding: 8px; text-align: center; color: #dc3545; font-size: 12px;">載入失敗</div>';
                $(`#buttons-${funcId}`).html(errorHtml).css({
                    'padding': '0',
                    'min-height': '30px'
                });
            });
        }

        // 點擊切換按鈕權限
        function toggleButtonPermissionByClick(funcId, btnSeq) {
            const checkbox = $(`.btn-item`).filter(function () {
                return $(this).attr('onclick') && $(this).attr('onclick').includes(`'${funcId}', '${btnSeq}'`);
            }).find('input[type="checkbox"]');

            const isChecked = checkbox.prop('checked');
            checkbox.prop('checked', !isChecked);
            toggleButtonPermission(funcId, btnSeq, !isChecked);

        }

        // 切換按鈕權限
        function toggleButtonPermission(funcId, btnSeq, hasPermission) {
            groupPermissions[funcId].buttons[btnSeq] = hasPermission;
            showSaveReminder();

            const btnItem = $(`.btn-item`).filter(function () {
                return $(this).attr('onclick') && $(this).attr('onclick').includes(`'${funcId}', '${btnSeq}'`);
            });

            if (hasPermission) {
                btnItem.addClass('has-permission');
            } else {
                btnItem.removeClass('has-permission');
            }
        }

        // 刷新指定頁面的按鈕顯示狀態
        function refreshButtonsDisplay(funcId) {
            $(`.page-section`).each(function () {
                const pageHeader = $(this).find('.page-header');
                if (pageHeader.text().includes(`(${funcId})`)) {
                    const buttonsContainer = $(this).find('.buttons-container');
                    buttonsContainer.find('.btn-item').each(function () {
                        const btnElement = $(this);
                        const onclick = btnElement.attr('onclick');
                        if (onclick && onclick.includes(`'${funcId}',`)) {
                            const btnSeqMatch = onclick.match(/'([^']+)', '([^']+)'/);
                            if (btnSeqMatch && btnSeqMatch.length >= 3) {
                                const btnSeq = btnSeqMatch[2];
                                const hasPermission = groupPermissions[funcId].buttons[btnSeq] || false;
                                const checkbox = btnElement.find('input[type="checkbox"]');
                                checkbox.prop('checked', hasPermission);

                                if (hasPermission) {
                                    btnElement.addClass('has-permission');
                                } else {
                                    btnElement.removeClass('has-permission');
                                }
                            }
                        }
                    });
                }
            });
        }

        // 儲存所有權限
        function saveAllPermissions() {
            const funcIds = [];
            const buttonPermissions = [];
            Object.keys(groupPermissions).forEach(function (funcId) {
                if (groupPermissions[funcId].hasPagePermission) {
                    funcIds.push(funcId);

                    Object.keys(groupPermissions[funcId].buttons).forEach(function (btnSeq) {
                        if (groupPermissions[funcId].buttons[btnSeq]) {
                            buttonPermissions.push(`${funcId}|${btnSeq}`);
                        }
                    });
                }
            });

            $.post('@Url.Action("BatchSetPermissions", "AP")', {
                apg_no: currentGroup,
                funcIds: funcIds,
                buttonPermissions: buttonPermissions
            }, function (response) {
                if (response.success) {
                    alert('權限設定儲存成功！');
                    hideSaveReminder();
                } else {
                    alert('儲存失敗：' + response.message);
                }
            });
        }

        // 群組管理函數
        function openGroupModal() {
            isEditMode = false;
            $('#groupModalTitle').text('新增群組');
            $('#groupForm')[0].reset();

            $.get('@Url.Action("GetNextGroupNo", "AP")', function (response) {
                if (response.success) {
                    $('#groupNo').val(response.data);
                }
            });

            loadParentGroupOptions();

            $('#groupModal').modal('show');
        }

        function editGroup() {
            if (!currentGroup) return;

            isEditMode = true;
            $('#groupModalTitle').text('修改群組');

            // 載入主管群組選項
            loadParentGroupOptions(() => {
                // 載入群組資料
                $.get('@Url.Action("GetGroup", "AP")', { apg_no: currentGroup }, function (response) {
                    if (response.success) {
                        $('#groupNo').val(response.data.APG_NO);
                        $('#groupName').val(response.data.APG_NAME);

                        if (response.data.PARENT_APG_NO) {
                            const parentGroups = response.data.PARENT_APG_NO.split(',');
                            parentGroups.forEach(function (parentApgNo) {
                                const trimmedApgNo = parentApgNo.trim();
                                if (trimmedApgNo) {
                                    $(`input[name="parentGroups"][value="${trimmedApgNo}"]`).prop('checked', true);
                                }
                            });
                        }

                        $('#groupModal').modal('show');
                    }
                });
            });
        }

        // 主管群組選項
        function loadParentGroupOptions(callback) {
            $.get('@Url.Action("GetParentGroupSelectList", "AP")', function (response) {
                let html = '';

                if (Array.isArray(response)) {
                    response.forEach(function (group) {
                        // 允許選擇自己群組
                        html += `
                    <div class="form-check mb-2">
                        <input class="form-check-input" type="checkbox" name="parentGroups"
                               value="${group.value}" id="parent_${group.value}">
                        <label class="form-check-label" for="parent_${group.value}">
                            ${group.text}
                        </label>
                    </div>`;
                    });
                }

                if (html === '') {
                    html = '<div class="text-muted">無可選擇的群組</div>';
                }

                $('#parentGroupList').html(html);

                if (callback) callback();
            }).fail(function () {
                $('#parentGroupList').html('<div class="text-danger">載入失敗</div>');
            });
        }

        // 儲存群組設定
        function saveGroup() {
            const groupNo = $('#groupNo').val();
            const groupName = $('#groupName').val();

            if (!groupName.trim()) {
                alert('請輸入群組名稱');
                return;
            }

            const selectedParentGroups = [];
            $('input[name="parentGroups"]:checked').each(function () {
                selectedParentGroups.push($(this).val());
            });

            const url = isEditMode ? '@Url.Action("UpdateGroup", "AP")' : '@Url.Action("AddGroup", "AP")';

            const postData = {
                APG_NO: groupNo,
                APG_NAME: groupName
            };

            selectedParentGroups.forEach(function (parentApgNo, index) {
                postData[`parentApgNos[${index}]`] = parentApgNo;
            });

            $.post(url, postData, function (response) {
                if (response.success) {
                    alert(response.message);
                    $('#groupModal').modal('hide');
                    if (isEditMode) {
                        // 修改模式：只更新群組下拉選單，不重新載入其他區塊
                        loadGroups(() => {
                            $('#groupSelect').val(currentGroup);
                        });
                    } else {
                        // 新增模式：需要選中新群組並載入所有資料
                        loadGroups(() => {
                            $('#groupSelect').val(groupNo);
                            currentGroup = groupNo;
                            loadGroupData();
                        });
                    }
                } else {
                    alert(response.message);
                }
            }).fail(function () {
                alert('儲存失敗，請稍後再試');
            });
        }

        // 刪除群組
        function deleteGroup() {
            if (!currentGroup) return;

            const groupName = $('#groupSelect option:selected').text();

            if (confirm(`確定要刪除群組「${groupName}」嗎？\n\n注意：這將同時刪除該群組的所有使用者和權限設定，且無法復原！`)) {
                $.post('@Url.Action("DeleteGroup", "AP")', { apg_no: currentGroup }, function (response) {
                    if (response.success) {
                        alert('群組刪除成功！');
                        // 重新載入群組清單並重置所有區塊
                        loadGroups();
                        currentGroup = '';
                        resetAllSections();
                    } else {
                        alert('刪除失敗：' + response.message);
                    }
                }).fail(function () {
                    alert('刪除失敗，請稍後再試');
                });
            }
        }

        // 使用者管理函數
        function openUserModal() {
            $('#userForm')[0].reset();

            // 重新初始化 Select2
            if ($('#userIdSelect').hasClass('select2-hidden-accessible')) {
                $('#userIdSelect').select2('destroy');
            }

            initEmployeeSelect();
            $('#userModal').modal('show');
        }

        function saveUser() {
            const formData = {
                APG_NO: currentGroup,
                U_ID: $('#userIdSelect').val(),
                U_NAME: $('#userName').val()
            };

            if (!formData.U_ID || !formData.U_NAME.trim()) {
                alert('請選擇員工');
                return;
            }

            $.post('@Url.Action("AddUser", "AP")', formData, function (response) {
                if (response.success) {
                    alert(response.message);
                    $('#userModal').modal('hide');
                    loadUsers();
                } else {
                    alert(response.message);
                }
            }).fail(function () {
                alert('新增失敗，請稍後再試');
            });
        }

        function deleteUser(userId, userName) {
            if (confirm(`確定要將 "${userName}" 從群組中移除嗎？`)) {
                $.post('@Url.Action("DeleteUser", "AP")', {
                    apg_no: currentGroup,
                    u_id: userId
                }, function (response) {
                    if (response.success) {
                        alert(response.message);
                        loadUsers();
                    } else {
                        alert(response.message);
                    }
                });
            }
        }

        // 查詢人員權限
        function searchUserPermissions() {
            const userId = $('#searchUserId').val().trim();
            if (!userId) {
                alert('請輸入員工編號');
                return;
            }

            $.get('@Url.Action("SearchUserPermissions", "AP")', { u_id: userId }, function (response) {
                if (response.success) {
                    displaySearchResult(response.data);
                    $('#searchResult').show();
                } else {
                    alert(response.message);
                    $('#searchResult').hide();
                }
            }).fail(function () {
                alert('查詢失敗，請稍後再試');
                $('#searchResult').hide();
            });
        }

        // 顯示查詢結果
        function displaySearchResult(data) {
            const userInfo = data.UserInfo;

            let html = `
        <div class="row">
            <div class="col-md-8">
                <div class="row">
                    <div class="col-md-6">
                        <strong>員工編號：</strong>${userInfo.U_ID}<br>
                        <strong>員工姓名：</strong>${userInfo.U_NAME}
                    </div>
                    <div class="col-md-6">
                        <strong>所屬群組：</strong>${userInfo.APG_NAME} (${userInfo.APG_NO})<br>
                        <strong>建立時間：</strong>${userInfo.CREATE_TIME || 'N/A'}
                    </div>
                </div>
            </div>
            <div class="col-md-4 text-right">
                <button type="button" class="btn btn-primary btn-sm" onclick="loadUserGroup('${userInfo.APG_NO}')">
                    <i class="fas fa-eye"></i> 檢視該群組權限
                </button>
            </div>
        </div>`;

            $('#searchResultContent').html(html);
        }

        // 載入使用者群組
        function loadUserGroup(apgNo) {
            $('#groupSelect').val(apgNo);
            loadGroupData();
            clearSearch();
        }

        // 清除查詢
        function clearSearch() {
            $('#searchUserId').val('');
            $('#searchResult').hide();
        }

        // 初始化員工下拉選單（支援搜尋）
        function initEmployeeSelect() {
            $('#userIdSelect').select2({
                ajax: {
                    url: '@Url.Action("GetEmployeeList", "AP")',
                    dataType: 'json',
                    delay: 300,
                    data: function (params) {
                        return {
                            keyword: params.term || ''
                        };
                    },
                    processResults: function (data) {
                        if (data.success) {
                            return {
                                results: data.data.map(function (emp) {
                                    return {
                                        id: emp.EMP_NO,
                                        text: `${emp.EMP_NO} - ${emp.EMP_NAME} (${emp.ORGAN_CAP})`,
                                        empData: emp
                                    };
                                })
                            };
                        }
                        return { results: [] };
                    },
                    cache: true
                },
                placeholder: '請輸入員工編號或姓名搜尋',
                allowClear: true,
                minimumInputLength: 0,
                language: {
                    noResults: function () {
                        return "查無相關員工資料";
                    },
                    searching: function () {
                        return "搜尋中...";
                    }
                }
            });

            // 監聽選擇事件
            $('#userIdSelect').on('select2:select', function (e) {
                onEmployeeSelect();
            });

            // 監聽清除事件
            $('#userIdSelect').on('select2:clear', function (e) {
                $('#userName, #userDept, #userPost').val('');
            });
        }

        // 員工選擇事件
        function onEmployeeSelect() {
            const empNo = $('#userIdSelect').val();
            if (empNo) {
                $.get('@Url.Action("GetEmployeeInfo", "AP")', { emp_no: empNo }, function (response) {
                    if (response.success) {
                        const emp = response.data;
                        $('#userName').val(emp.EMP_NAME || '');
                        $('#userDept').val(emp.ORGAN_CAP || '');
                        $('#userPost').val(emp.POST_NAME || '');
                    } else {
                        alert('取得員工資訊失敗：' + response.message);
                    }
                }).fail(function () {
                    alert('取得員工資訊失敗，請稍後再試');
                });
            } else {
                $('#userName, #userDept, #userPost').val('');
            }
        }
    </script>
}

