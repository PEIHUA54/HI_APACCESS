好 👍 那我幫你先把五個 SQL 都整理成 可直接貼去 SSMS 測試的版本，參數都用 @ 代號保留，你可以先用實際值替換掉測看看結果正不正確。

⸻

① GetUserNameAndGroup

DECLARE @SysID NVARCHAR(50) = 'HI_POS';
DECLARE @UserAD NVARCHAR(50) = '3A001';

SELECT DISTINCT
    B.U_ID AS UserID,
    B.U_NAME AS UserName,
    A.APG_NO AS GroupID,
    A.APG_NAME AS GroupName,
    A.PARENT_APG_NO,
    (SELECT STRING_AGG(APG_NO, ',') 
     FROM [HI_TMMAIN].[dbo].[AP_GROUP] 
     WHERE PARENT_APG_NO = A.APG_NO AND SYS_ID = A.SYS_ID) AS ChildGroupID,
    A.SENSITIVE_DATA_ACCESS AS SensitiveDataAccess,
    M.ORGAN_CAP AS OrganName,
    M.POST_NAME AS PostName
FROM [HI_TMMAIN].[dbo].[AP_GROUP] A
LEFT JOIN [AP_USER] B ON A.APG_NO = B.APG_NO
LEFT JOIN [VW_M1EMP_MAST] M ON B.U_ID = M.EMP_NO
WHERE A.SYS_ID=@SysID AND B.U_ID=@UserAD;


⸻

② GetGroupAllUser


DECLARE @SysID NVARCHAR(50) = 'HI_POS';
DECLARE @GroupID NVARCHAR(50) = '001';
DECLARE @IsIncludeChildGroups BIT = 1;

SELECT DISTINCT A.U_ID
FROM [HI_TMMAIN].[dbo].[AP_USER] A
LEFT JOIN [AP_GROUP] B ON A.APG_NO = B.APG_NO
WHERE A.SYS_ID=@SysID
AND (
    B.APG_NO=@GroupID
    OR (@IsIncludeChildGroups=1 AND B.PARENT_APG_NO=@GroupID)
);


⸻

③ GetTree

DECLARE @SysID NVARCHAR(50) = 'HI_POS';
DECLARE @GroupID NVARCHAR(50) = '001';

SELECT DISTINCT
    a.FUNC_ID AS FuncID,
    a.FUNC_NA AS FuncName,
    a.VIEW_H AS Controller,
    a.VIEW_HB AS Action,
    a.SORT_NO AS Sort,
    a.PARENT_ID AS ParentID,
    CASE WHEN a.PARENT_ID='HOME' THEN '0' ELSE '1' END AS Level
FROM [HI_TMMAIN].[dbo].[AP_FUNC] a
LEFT JOIN [AP_USER_FUNC_CONFIG] b ON a.FUNC_ID = b.FUNC_ID
WHERE a.SYS_ID=@SysID AND b.APG_NO=@GroupID;


⸻

④ GetFuncBtn

DECLARE @SysID NVARCHAR(50) = 'HI_POS';
DECLARE @GroupID NVARCHAR(50) = '001';
DECLARE @FuncID NVARCHAR(50) = 'POS1001';

SELECT DISTINCT
    a.BTNID AS BtnID,
    a.BTN_NAME AS BtnName,
    a.CONTROLLER AS Controller,
    a.ACTION AS Action,
    a.LOC AS BtnLocation,
    a.ONCLICK AS BtnOnclick
FROM [HI_TMMAIN].[dbo].[AP_RFUNC] a
LEFT JOIN [AP_USER_RFUNC_CONFIG] b ON a.FUNC_ID = b.FUNC_ID
WHERE a.SYS_ID=@SysID AND b.APG_NO=@GroupID AND a.FUNC_ID=@FuncID;


⸻

⑤ CheckBtnEnabled

DECLARE @SysID NVARCHAR(50) = 'HI_POS';
DECLARE @GroupID NVARCHAR(50) = '001';
DECLARE @FuncID NVARCHAR(50) = 'POS1001';
DECLARE @BtnID NVARCHAR(50) = 'EDIT';

SELECT CASE WHEN COUNT(1) > 0 THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT) END AS Result
FROM [HI_TMMAIN].[dbo].[AP_USER_RFUNC_CONFIG] A
LEFT JOIN [AP_RFUNC] B ON A.FUNC_ID = B.FUNC_ID
WHERE A.SYS_ID=@SysID 
  AND A.APG_NO=@GroupID 
  AND A.FUNC_ID=@FuncID 
  AND B.BTNID=@BtnID;


⸻

建議你先在 HI_TMMAIN DB 逐一測試，確認結果是否跟需求定義的 Response 相符。
等你說 邏輯沒問題，我再幫你把 Factory 與 APACCESS 主類別呼叫 完整寫出來。

要不要我順便幫你加 測試數據範例 (INSERT INTO)，讓你在測試時不用等實際資料？