using System;
using System.Collections.Generic;
using System.Text;
using Newtonsoft.Json;

namespace HI_APACCESS_DLL_FRAMEWORK
{
/// <summary>
/// 請求參數
/// </summary>
public class GetFunctionAndAccessUrlRequest
{
public string sys_id { get; set; }        // 系統ID
public string type { get; set; }          // 1=頁面設定, 2=權限設定
public string environment { get; set; }   // TEST=測試, PROD=正式
}

```
/// <summary>
/// 回應結果
/// </summary>
public class GetFunctionAndAccessUrlResponse
{
    public string code { get; set; }     // 結果代碼
    public string message { get; set; }  // 訊息
    public string url { get; set; }      // 功能連結
}

/// <summary>
/// 核心服務
/// </summary>
public class AccessUrlService
{
    // 環境網址設定
    private readonly Dictionary<string, string> EnvironmentUrls = new Dictionary<string, string>
    {
        { "TEST", "http://10.8.254.68/HI_APACCESS_TEST" },
        { "PROD", "http://10.8.254.68/HI_APACCESS_PROD" }
    };

    // 功能類型設定 - 對應 HI_APACCESS 系統的實際 Action
    private readonly Dictionary<string, string> TypeActions = new Dictionary<string, string>
    {
        { "1", "PageManagement" },   // 頁面&按鈕設定 -> HI_APACCESS 的 PageManagement
        { "2", "GroupManagement" }   // 權限設定 -> HI_APACCESS 的 GroupManagement
    };

    // 【可選】授權系統清單 - 如果您不需要限制可以註解掉
    private readonly HashSet<string> AuthorizedSystems = new HashSet<string>
    {
        "HI_POS" // 只允許 HI_POS 系統呼叫，可以加入其他系統ID
        // "HI_CRM", "HI_ERP" // 如果有其他系統需要使用可以加入
    };

    /// <summary>
    /// 主要功能：取得功能連結
    /// </summary>
    public GetFunctionAndAccessUrlResponse GetFunctionAndAccessUrl(GetFunctionAndAccessUrlRequest request)
    {
        try
        {
            // 基本參數檢查
            if (request == null || string.IsNullOrWhiteSpace(request.sys_id) || 
                string.IsNullOrWhiteSpace(request.type) || string.IsNullOrWhiteSpace(request.environment))
            {
                return new GetFunctionAndAccessUrlResponse
                {
                    code = "1001",
                    message = "參數不完整",
                    url = ""
                };
            }

            // 檢查類型是否正確
            if (!TypeActions.ContainsKey(request.type))
            {
                return new GetFunctionAndAccessUrlResponse
                {
                    code = "1002", 
                    message = "類型錯誤，只接受 1 或 2",
                    url = ""
                };
            }

            // 檢查環境是否正確
            if (!EnvironmentUrls.ContainsKey(request.environment))
            {
                return new GetFunctionAndAccessUrlResponse
                {
                    code = "1003",
                    message = "環境錯誤，只接受 TEST 或 PROD", 
                    url = ""
                };
            }

            // 【可選】檢查系統權限 - 如果不需要限制可以註解掉這段
            if (!AuthorizedSystems.Contains(request.sys_id))
            {
                return new GetFunctionAndAccessUrlResponse
                {
                    code = "0001",
                    message = "查無權限",
                    url = ""
                };
            }

            // 產生 Token
            string token = GenerateSimpleToken(request.sys_id, request.type);

            // 組合最終 URL
            string baseUrl = EnvironmentUrls[request.environment];
            string action = TypeActions[request.type];
            string finalUrl = $"{baseUrl}/Home/{action}?token={token}";

            // 回傳成功結果
            return new GetFunctionAndAccessUrlResponse
            {
                code = "0000",
                message = "成功",
                url = finalUrl
            };
        }
        catch (Exception ex)
        {
            return new GetFunctionAndAccessUrlResponse
            {
                code = "9999",
                message = "系統錯誤：" + ex.Message,
                url = ""
            };
        }
    }

    /// <summary>
    /// 產生簡單 Token
    /// </summary>
    private string GenerateSimpleToken(string sysId, string type)
    {
        // 簡單的 Token 產生方式
        string rawData = $"{sysId}_{type}_{DateTime.Now:yyyyMMddHHmmss}";
        var bytes = Encoding.UTF8.GetBytes(rawData);
        return Convert.ToBase64String(bytes);
    }
}

/// <summary>
/// 主要對外類別
/// </summary>
public class Class1
{
    private readonly AccessUrlService _service;

    public Class1()
    {
        _service = new AccessUrlService();
    }

    /// <summary>
    /// 方法1：使用物件參數
    /// </summary>
    public GetFunctionAndAccessUrlResponse GetFunctionAndAccessUrl(GetFunctionAndAccessUrlRequest request)
    {
        return _service.GetFunctionAndAccessUrl(request);
    }

    /// <summary>
    /// 方法2：使用JSON字串 (最常用)
    /// </summary>
    public string GetFunctionAndAccessUrl(string requestJson)
    {
        try
        {
            var request = JsonConvert.DeserializeObject<GetFunctionAndAccessUrlRequest>(requestJson);
            var response = _service.GetFunctionAndAccessUrl(request);
            return JsonConvert.SerializeObject(response, Formatting.Indented);
        }
        catch (Exception ex)
        {
            var errorResponse = new GetFunctionAndAccessUrlResponse
            {
                code = "8888",
                message = "JSON格式錯誤：" + ex.Message,
                url = ""
            };
            return JsonConvert.SerializeObject(errorResponse, Formatting.Indented);
        }
    }

    /// <summary>
    /// 方法3：直接傳入三個參數 (最簡單)
    /// </summary>
    public string GetFunctionAndAccessUrl(string sysId, string type, string environment)
    {
        var request = new GetFunctionAndAccessUrlRequest
        {
            sys_id = sysId,
            type = type,
            environment = environment
        };

        var response = _service.GetFunctionAndAccessUrl(request);
        return JsonConvert.SerializeObject(response, Formatting.Indented);
    }
}
```

}

// 在 PosFile_Apply 系統中使用 DLL

using HI_APACCESS_DLL_FRAMEWORK; // 加入 DLL 參考

namespace PosFile_Apply.Controllers
{
public class AccessController : Controller
{
/// <summary>
/// ap_access_sys - 對應權限設定入口
/// </summary>
public ActionResult ap_access_sys()
{
try
{
// 建立 DLL 實例
var api = new Class1();

```
            // 呼叫 DLL 取得 HI_APACCESS 的 GroupManagement 連結
            // 參數：系統ID, 類型(2=權限設定), 環境
            string jsonResult = api.GetFunctionAndAccessUrl("HI_POS", "2", "TEST");
            
            // 解析結果
            dynamic response = Newtonsoft.Json.JsonConvert.DeserializeObject(jsonResult);
            
            if (response.code == "0000")
            {
                // 成功，導向到 HI_APACCESS 的 GroupManagement
                return Redirect(response.url.ToString());
            }
            else
            {
                // 失敗處理
                ViewBag.ErrorMessage = $"取得權限設定連結失敗：{response.message}";
                return View("Error");
            }
        }
        catch (Exception ex)
        {
            ViewBag.ErrorMessage = "系統錯誤：" + ex.Message;
            return View("Error");
        }
    }

    /// <summary>
    /// ap_access_sys_func - 對應頁面功能設定入口
    /// </summary>
    public ActionResult ap_access_sys_func()
    {
        try
        {
            var api = new Class1();
            
            // 呼叫 DLL 取得 HI_APACCESS 的 PageManagement 連結
            // 參數：系統ID, 類型(1=頁面設定), 環境
            string jsonResult = api.GetFunctionAndAccessUrl("HI_POS", "1", "TEST");
            
            dynamic response = Newtonsoft.Json.JsonConvert.DeserializeObject(jsonResult);
            
            if (response.code == "0000")
            {
                // 導向到 HI_APACCESS 的 PageManagement
                return Redirect(response.url.ToString());
            }
            else
            {
                ViewBag.ErrorMessage = $"取得頁面設定連結失敗：{response.message}";
                return View("Error");
            }
        }
        catch (Exception ex)
        {
            ViewBag.ErrorMessage = "系統錯誤：" + ex.Message;
            return View("Error");
        }
    }

    /// <summary>
    /// 測試方法 - 可以用來確認 DLL 是否正常
    /// </summary>
    public ActionResult TestDll()
    {
        try
        {
            var api = new Class1();
            
            // 測試權限設定連結
            string result1 = api.GetFunctionAndAccessUrl("HI_POS", "2", "TEST");
            ViewBag.PermissionResult = result1;
            
            // 測試頁面設定連結
            string result2 = api.GetFunctionAndAccessUrl("HI_POS", "1", "TEST");
            ViewBag.PageResult = result2;
            
            return View();
        }
        catch (Exception ex)
        {
            ViewBag.ErrorMessage = ex.Message;
            return View();
        }
    }
}
```

}

// 如果是 WebForms 的話
namespace PosFile_Apply
{
public partial class AccessPage : System.Web.UI.Page
{
// 權限設定按鈕
protected void btnAccessSys_Click(object sender, EventArgs e)
{
try
{
var api = new HI_APACCESS_DLL_FRAMEWORK.Class1();
string jsonResult = api.GetFunctionAndAccessUrl(“HI_POS”, “2”, “TEST”);

```
            dynamic response = Newtonsoft.Json.JsonConvert.DeserializeObject(jsonResult);
            
            if (response.code == "0000")
            {
                Response.Redirect(response.url.ToString());
            }
            else
            {
                lblMessage.Text = "錯誤：" + response.message;
            }
        }
        catch (Exception ex)
        {
            lblMessage.Text = "系統錯誤：" + ex.Message;
        }
    }

    // 頁面功能設定按鈕
    protected void btnAccessSysFunc_Click(object sender, EventArgs e)
    {
        try
        {
            var api = new HI_APACCESS_DLL_FRAMEWORK.Class1();
            string jsonResult = api.GetFunctionAndAccessUrl("HI_POS", "1", "TEST");
            
            dynamic response = Newtonsoft.Json.JsonConvert.DeserializeObject(jsonResult);
            
            if (response.code == "0000")
            {
                Response.Redirect(response.url.ToString());
            }
            else
            {
                lblMessage.Text = "錯誤：" + response.message;
            }
        }
        catch (Exception ex)
        {
            lblMessage.Text = "系統錯誤：" + ex.Message;
        }
    }
}
```

}

// Helper 類別版本（推薦使用）
namespace PosFile_Apply.Helpers
{
public static class HiAccessHelper
{
/// <summary>
/// 取得權限設定 URL（對應 ap_access_sys）
/// </summary>
public static string GetPermissionSettingUrl(string environment = “TEST”)
{
var api = new HI_APACCESS_DLL_FRAMEWORK.Class1();
string jsonResult = api.GetFunctionAndAccessUrl(“HI_POS”, “2”, environment);

```
        dynamic response = Newtonsoft.Json.JsonConvert.DeserializeObject(jsonResult);
        
        if (response.code == "0000")
        {
            return response.url;
        }
        else
        {
            throw new Exception(response.message.ToString());
        }
    }

    /// <summary>
    /// 取得頁面功能設定 URL（對應 ap_access_sys_func）
    /// </summary>
    public static string GetPageFunctionSettingUrl(string environment = "TEST")
    {
        var api = new HI_APACCESS_DLL_FRAMEWORK.Class1();
        string jsonResult = api.GetFunctionAndAccessUrl("HI_POS", "1", environment);
        
        dynamic response = Newtonsoft.Json.JsonConvert.DeserializeObject(jsonResult);
        
        if (response.code == "0000")
        {
            return response.url;
        }
        else
        {
            throw new Exception(response.message.ToString());
        }
    }
}
```

}

// 預期的 URL 輸出範例：
// 類型 1 (頁面設定)：http://10.8.254.68/HI_APACCESS_TEST/Home/PageManagement?token=xxx
// 類型 2 (權限設定)：http://10.8.254.68/HI_APACCESS_TEST/Home/GroupManagement?token=xxx