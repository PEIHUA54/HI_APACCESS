CONTROLLER:
    #region 查詢和員工相關 AJAX

    // 查詢人員權限
    [HttpGet]
    public JsonResult SearchUserPermissions(string u_id)
    {
        try
        {
            var service = GetAPService();
            var userInfo = service.GetUserPermissions(u_id);
            if (userInfo != null)
            {
                return Json(new { success = true, data = userInfo }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { success = false, message = "查無此人員資料" }, JsonRequestBehavior.AllowGet);
            }
        }
        catch (Exception ex)
        {
            return Json(new { success = false, message = "查詢人員權限發生錯誤：" + ex.Message }, JsonRequestBehavior.AllowGet);
        }
    }

    // 取得員工清單
    [HttpGet]
    public JsonResult GetEmployeeList(string keyword = "")
    {
        try
        {
            var service = GetAPService();
            var employees = service.GetEmployeeList(keyword);
            return Json(new { success = true, data = employees }, JsonRequestBehavior.AllowGet);
        }
        catch (Exception ex)
        {
            return Json(new { success = false, message = "取得員工清單發生錯誤：" + ex.Message }, JsonRequestBehavior.AllowGet);
        }
    }

    // 根據員工編號取得員工資訊
    [HttpGet]
    public JsonResult GetEmployeeInfo(string emp_no)
    {
        try
        {
            var service = GetAPService();
            var employee = service.GetEmployeeInfo(emp_no);
            if (employee != null)
            {
                return Json(new { success = true, data = employee }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { success = false, message = "查無此員工" }, JsonRequestBehavior.AllowGet);
            }
        }
        catch (Exception ex)
        {
            return Json(new { success = false, message = "取得員工資訊發生錯誤：" + ex.Message }, JsonRequestBehavior.AllowGet);
        }
    }

    #endregion

F_AP方法區SQL:  
  #region 查詢和員工管理

    // 查詢人員完整權限資訊  可帶VW_M1EMP_MAST=> [ORGAN_CAP], [POST_NAME]
    public UserPermissionQueryModel GetUserPermissions(string u_id)
    {
        string sql = @"
SELECT u.[SYS_ID], u.[APG_NO], g.[APG_NAME], u.[U_ID], u.[U_NAME], 
       u.[CREATOR], u.[CREATE_TIME], u.[EDITOR], u.[EDIT_TIME]
FROM [HI_TMMAIN].[dbo].[AP_USER] u
LEFT JOIN [HI_TMMAIN].[dbo].[AP_GROUP] g ON u.SYS_ID = g.SYS_ID AND u.APG_NO = g.APG_NO
WHERE u.[SYS_ID] = @SYS_ID AND u.[U_ID] = @U_ID";

        List<SqlParameter> parameters = new List<SqlParameter>
{
    new SqlParameter("@SYS_ID", _sysId),
    new SqlParameter("@U_ID", u_id)
};

        DataTable dt = SVS_DBmanager.QueryBySQL(sql, parameters);
        if (dt.Rows.Count > 0)
        {
            var userInfo = SVS_DBmanager.ConvertToList<UserModel>(dt).FirstOrDefault();
            if (userInfo != null)
            {
                // 取得該使用者的群組權限
                var permissions = GetPermissionSettings(userInfo.APG_NO);
                return new UserPermissionQueryModel
                {
                    UserInfo = userInfo,
                    Permissions = permissions
                };
            }
        }
        return null;
    }

    // 取得員工清單
    public List<EmployeeModel> GetEmployeeList(string keyword = "")
    {
        string sql = @"
SELECT [EMP_NO], [EMP_NAME], [ORGAN_CAP], [POST_NAME]
FROM [HI_TMMAIN].[dbo].[VW_M1EMP_MAST]
WHERE 1=1";

        List<SqlParameter> parameters = new List<SqlParameter>();

        if (!string.IsNullOrWhiteSpace(keyword))
        {
            sql += " AND ([EMP_NO] LIKE @KEYWORD OR [EMP_NAME] LIKE @KEYWORD)";
            parameters.Add(new SqlParameter("@KEYWORD", $"%{keyword}%"));
        }

        sql += " ORDER BY [EMP_NO]";

        DataTable dt = SVS_DBmanager.QueryBySQL(sql, parameters);
        return SVS_DBmanager.ConvertToList<EmployeeModel>(dt);
    }

    // 根據員工編號取得員工資訊
    public EmployeeModel GetEmployeeInfo(string emp_no)
    {
        string sql = @"
SELECT [EMP_NO], [EMP_NAME], [ORGAN_CAP], [POST_NAME]
FROM [HI_TMMAIN].[dbo].[VW_M1EMP_MAST]
WHERE [EMP_NO] = @EMP_NO";

        List<SqlParameter> parameters = new List<SqlParameter>
{
    new SqlParameter("@EMP_NO", emp_no)
};

        DataTable dt = SVS_DBmanager.QueryBySQL(sql, parameters);
        var employees = SVS_DBmanager.ConvertToList<EmployeeModel>(dt);
        return employees.FirstOrDefault();
    }

    #endregion
