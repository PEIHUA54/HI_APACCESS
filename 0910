ok，鎖 001 這個內建管理員群組最穩的是「前端禁止 + 後端再擋一次」。下面直接給你「就地改」的片段，貼上就能用。

前端（View / JS）

1) 切換群組時，直接禁用「修改 / 刪除」按鈕

在你的 loadGroupData() 裡，原本選到群組後會啟用按鈕；請在啟用後加上這段判斷，把 001 鎖起來：

function loadGroupData() {
    const newGroup = $('#groupSelect').val();

    if (hasUnsavedChanges && currentGroup !== newGroup && currentGroup !== '') {
        if (!confirm('有未儲存的變更，切換群組將遺失這些變更。確定要繼續嗎？')) {
            $('#groupSelect').val(currentGroup);
            return;
        }
    }

    currentGroup = newGroup;
    hideSaveReminder();

    if (!currentGroup) {
        resetAllSections();
        return;
    }

    // 啟用所有按鈕
    $('#editGroupBtn, #addUserBtn, #saveAllBtn, #deleteGroupBtn, #importUserBtn').prop('disabled', false);

    // ★ 這裡加：鎖定 001
    const isLockedGroup = (currentGroup === '001');
    if (isLockedGroup) {
        $('#editGroupBtn, #deleteGroupBtn').prop('disabled', true);
        // 也可以給個提示（可留可不留）
        $('#editGroupBtn').attr('title', '此為系統內建群組，無法修改');
        $('#deleteGroupBtn').attr('title', '此為系統內建群組，無法刪除');
    } else {
        $('#editGroupBtn, #deleteGroupBtn').removeAttr('title');
    }

    loadUsers();
    loadPagePermissions();
}

2) 擋下「修改群組」動作

在你的 editGroup() 開頭加上這段，直接不讓開啟：

function editGroup() {
    if (!currentGroup) return;

    // ★ 這裡加：001 不可修改
    if (currentGroup === '001') {
        alert('「001 管理員（資訊）」為系統內建群組，無法修改。');
        return;
    }

    isEditMode = true;
    $('#groupModalTitle').text('修改群組');
    // ……後面原程式碼維持……
}

3) 擋下「刪除群組」動作

在你的 deleteGroup() 一開始加：

function deleteGroup() {
    if (!currentGroup) return;

    // ★ 這裡加：001 不可刪除
    if (currentGroup === '001') {
        alert('「001 管理員（資訊）」為系統內建群組，無法刪除。');
        return;
    }

    const groupName = $('#groupSelect option:selected').text();
    // ……後面原邏輯不變……
}

如果你只想鎖「名稱不可改」，而允許改其他欄位：可以在 editGroup() 裡照常開 modal，但在載入完資料後把 #groupName 設成 readonly。你現在的需求是「不能修改、也不能刪」，所以我直接整個擋掉。

⸻

後端（Controller / Service）

前端擋住仍不夠，後端要再保險擋一次，避免有人手動發 request。

1) UpdateGroup 動作擋 001

[HttpPost]
public JsonResult UpdateGroup(string APG_NO, string APG_NAME /* 其餘參數… */, string sysID)
{
    try
    {
        // ★ 這裡加：001 不允許修改
        if (APG_NO == "001")
            return Json(new { success = false, message = "「001 管理員（資訊）」為系統內建群組，禁止修改。" });

        var service = GetAPService();
        var result = service.UpdateGroup(APG_NO, APG_NAME /* …其餘 */);
        if (result.Success)
            return Json(new { success = true, message = "群組修改成功" });

        return Json(new { success = false, message = result.Message ?? "群組修改失敗" });
    }
    catch (Exception ex)
    {
        return Json(new { success = false, message = "修改發生錯誤：" + ex.Message });
    }
}

2) DeleteGroup 動作擋 001

[HttpPost]
public JsonResult DeleteGroup(string apg_no, string sysID)
{
    try
    {
        // ★ 這裡加：001 不允許刪除
        if (apg_no == "001")
            return Json(new { success = false, message = "「001 管理員（資訊）」為系統內建群組，禁止刪除。" });

        var service = GetAPService();

        // 你原本的檢查與刪除流程…
        var canDelete = service.CanDeleteGroup(apg_no); // 若你現成的是 CanDeleteGroup / CanDeleteFunction 擇一使用
        if (!canDelete)
        {
            return Json(new { success = false, message = "該群組仍有設定，無法刪除" });
        }

        var result = service.DeleteGroup(apg_no);
        if (result.Success)
            return Json(new { success = true, message = "群組刪除成功" });

        return Json(new { success = false, message = result.Message ?? "群組刪除失敗" });
    }
    catch (Exception ex)
    {
        return Json(new { success = false, message = "刪除發生錯誤：" + ex.Message });
    }
}

服務層（Service）如果也有 UpdateGroup/DeleteGroup，同樣加一層 if (apg_no == "001") throw / return fail 比較保險。

⸻

這樣做完：
	•	在畫面選到 001 時，「修改群組」「刪除群組」會自動變灰且點了也會被攔。
	•	就算有人刻意呼叫 API，後端也會拒絕。
	•	其他群組不受影響。