收到！我把「非 001 檢視 001 群時，所有『管理使用者』按鈕都不能出現」一起納進來，並修正你程式裡顏色與唯讀邏輯。以下只給需要替換/新增的片段，每段都有註解標明放哪裡、為何修改。

⸻

1) 入口：統一判斷（放在全域變數附近）

// ✅ 新增：統一的使用者管理權限判斷（誰能在目前所選群組進行「管理使用者」）
function canManageUsersHere() {
    // 001 登入 → 任何群都可以管理使用者（最高權限）
    if (currentGroupID === '001') return true;
    // 非 001 登入 → 只能管理「非 001 群」的使用者
    return currentGroup !== '001';
}


⸻

2) applyRoleGate：非 001 只能管理使用者、權限區唯讀（整段替換）

// 🔧 登入身分全域權限控制（非 001 → 只能管理使用者；群組/頁面/按鈕權限全部唯讀）
function applyRoleGate() {
    const isAdmin = (currentGroupID === '001');

    if (!isAdmin) {
        // 隱藏「群組維護／頁面權限操作／批次匯入權限」等
        $('#editGroupBtn, #deleteGroupBtn, #saveAllBtn, #insGroupBtn').hide();

        // 權限操作 API 全部 no-op（頁面/按鈕權限唯讀）
        window.togglePagePermissionByClick = function () { };
        window.togglePagePermission = function () { };
        window.selectAllButtons = function () { };
        window.clearAllButtons = function () { };
        window.toggleButtonPermissionByClick = function () { };
        window.toggleButtonPermission = function () { };
    }
}


⸻

3) loadGroupData：依「目前選取群組」決定是否顯示管理使用者按鈕（替換原本在此處判斷顯示/隱藏新增/匯入的程式）

// 🧭 在 loadGroupData() 裡、設定完 currentGroup 後呼叫
function loadGroupData() {
    const newGroup = $('#groupSelect').val();
    // ...（略）原本的未儲存判斷

    currentGroup = newGroup;
    hideSaveReminder();

    if (!currentGroup) { resetAllSections(); return; }

    // ✅ 新增：統一依規則顯示/隱藏「管理使用者」相關按鈕（與登入身分、所選群組綁定）
    updateUserManagementUI();

    // 啟用所有按鈕（applyRoleGate 會再隱藏不該出現者）
    $('#editGroupBtn, #addUserBtn, #saveAllBtn, #deleteGroupBtn, #importUserBtn').prop('disabled', false);

    // 001 群不可刪除
    const isLockedGroup = (currentGroup === '001');
    if (isLockedGroup) {
        $('#deleteGroupBtn').prop('disabled', true);
    } else {
        $('#editGroupBtn, #deleteGroupBtn').removeAttr('title');
    }

    loadUsers();
    loadPagePermissions();
}


⸻

4) 新增：updateUserManagementUI（放在同一支檔案任一處全域函式區）

// ✅ 新增：依規則切換「管理使用者」按鈕顯示（新增/批次匯入）
//  - 001 登入：任何群都顯示
//  - 非 001 登入：在 001 群隱藏；其它群顯示
function updateUserManagementUI() {
    const show = canManageUsersHere(); // 依目前 currentGroup 與登入身分決定
    $('#addUserBtn, #importUserBtn').toggle(show);
}


⸻

5) loadUsers：依規則決定是否渲染「變更群組 / 刪除」兩顆按鈕（只換渲染那塊）

// 在 loadUsers() 裡面，組 HTML 的地方改成：
if (response.success) {
    let html = '';
    const canManageHere = canManageUsersHere(); // ✅ 加這行

    if (response.data.length > 0) {
        response.data.forEach(function (user) {
            // ✅ 這塊會依 canManageHere 決定是否顯示兩顆按鈕
            const manageBtns = canManageHere ? `
                <button type="button"
                        class="btn btn-sm btn-warning btn-small btn-change-group"
                        onclick="openChangeGroupModal('${user.U_ID}', '${user.U_NAME}', '${currentGroup}')">
                    變更群組
                </button>
                <button type="button" 
                        class="btn btn-sm btn-danger btn-small btn-delete-user"
                        onclick="deleteUser('${user.U_ID}', '${user.U_NAME}')">
                    刪除
                </button>` : '';

            html += `
                <div class="user-item">
                    <div>
                        <strong>${user.U_ID}</strong><br>
                        <small>${user.U_NAME}</small><br>
                        <div class="extra-info">
                              建立人員:${user.CREATOR || ''}
                              建立日期:${user.CREATE_TIME || ''}<br>
                              修改人員:${user.EDITOR || ''}
                              修改日期:${user.EDIT_TIME || ''}
                        </div>
                    </div>
                    <div>
                        ${manageBtns}
                    </div>
                </div>`;
        });
    } else {
        html = '<div class="no-data">此群組暫無使用者</div>';
    }
    $('#userList').html(html);
}

🔒 規則效果：
	•	非 001 登入、檢視 001 群 → 不會出現「變更群組 / 刪除」兩顆 per-user 按鈕，也隱藏上方「新增使用者 / 批次匯入」。
	•	非 001 登入、檢視其它群 → 可見並可用。
	•	001 登入 → 全部可見並可用。

⸻

6) openChangeGroupModal：非 001 目的群不得選 001（你已做，保留；這裡只提醒關鍵判斷）

// 保留你原本這段過濾：非 001 不給選 001
if (Array.isArray(response)) {
    response.forEach(function (group) {
        if (group.value !== currentGroup && (currentGroupID === '001' || group.value !== '001')) {
            options += `<option value="${group.value}">${group.text}</option>`;
        }
    });
}


⸻

7) renderPageItem：恢復顏色 + 非 001 唯讀（整個函式替換）

你之前函式裡有兩個 return，後半段（帶顏色）被截斷了。我幫你合併且固定色彩。

function renderPageItem(func, isChild) {
    const funcId   = getFuncId(func);
    const funcName = getFuncName(func);

    const hasPermission = groupPermissions[funcId] && groupPermissions[funcId].hasPagePermission;
    const checkedAttr   = hasPermission ? 'checked' : '';

    const isParent = isParentPage(func);
    const isAdmin  = (currentGroupID === '001');

    // 🎨 顏色規則
    // 父頁面：淺藍； FUNC_TYPE=1：淺綠； FUNC_TYPE=2：淺橘；其餘白底
    let bgStyle = '';
    if (isParent) {
        bgStyle = 'background-color:#e8f1fb;';
    } else if (func.FUNC_TYPE === '1') {
        bgStyle = 'background-color:#e8f5e8;';
    } else if (func.FUNC_TYPE === '2') {
        bgStyle = 'background-color:#fdf7e8;';
    }

    // 非 001 → 唯讀（無 checkbox、不可觸發切換）
    const checkboxHtml = isAdmin ? `<input type="checkbox" class="permission-checkbox" ${checkedAttr}>` : '';
    const clickAttr    = isAdmin ? `onclick="togglePagePermissionByClick('${funcId}')" style="cursor:pointer;"` : 'style="cursor:default;"';

    const itemClass = `page-item ${hasPermission ? 'has-permission' : ''} ${isParent ? 'parent-page' : ''} ${isChild ? 'child-page-item' : ''}`;

    return `
      <div class="${itemClass}" data-func-id="${funcId}" ${clickAttr} style="${bgStyle}">
        <div class="permission-content">
            ${checkboxHtml}
            <span class="permission-title">${funcName}</span>
            <span class="permission-info">頁面ID: ${funcId}</span>
        </div>
      </div>`;
}


⸻

8) updateButtonListHierarchical / loadButtonsForPage：按鈕列唯讀條件用「登入身分」判斷（只改條件）

把這兩處的條件都改成直接判斷登入身分：

${ (currentGroupID === '001') ? ` ... 可操作按鈕 ... ` : '' }

以及：

if (currentGroupID === '001') {
    // 可編輯版（含 checkbox / onclick）
} else {
    // 唯讀版（無 checkbox / 無 onclick）
}


⸻

9) CSS：頁面被點選高亮（如果需要）

/* ✅ 可選：點選當前頁面時的高亮外框 */
.page-item.active-page{
  border:2px solid #4a89dc;
  box-shadow:0 0 5px rgba(74,137,220,.6);
}


⸻

✅ 規則驗證（對照你的需求）
	•	001 登入：群組維護 / 使用者管理 / 頁面權限 / 按鈕權限 → 全部可用
	•	非 001 登入：
	•	「頁面權限 / 按鈕權限」→ 唯讀（不可勾、不可批次全選/全取消）
	•	「管理使用者」→ 只能在非 001 群執行（新增、刪除、變更群組），檢視 001 群時完全沒有任何管理按鈕
	•	變更群組目標 → 不可選 001（已在 modal 過濾）

如果你要「非 001 在 001 群連使用者清單也不顯示」，我也可以再補一行 #userList 切換顯示；目前是可看不可管。