傳入參數要增加群組ID(GroupID)，TOKEN要多帶GROUPID過去

APACCESS_DLL 呼叫方法:
          internal class FGetFunctionAndAccessUrl
    {
        // 環境設定
        internal readonly Dictionary<string, string> EnvironmentUrls = new Dictionary<string, string>
        {
            { "DEV", "http://localhost:53088" },
            { "TEST", "http://10.8.254.68/HI_APACCESS_TEST" },
            { "PROD", "http://10.8.254.68/HI_APACCESS" },
        };

        // 類型設定
        internal readonly Dictionary<string, string> TypeActions = new Dictionary<string, string>
        {
            { "1", "TokenEntry_FUNC" },
            { "2", "TokenEntry" }
        };

        // 取得授權系統清單（呼叫 FCommon）
        internal List<string> GetAuthorizedSystemsList(string environment)
        {
            return FCommon.GetAuthorizedSystemsList(environment);
        }

        // 產 JWT Token  10/30 -增加群組
        internal string GenerateJwtToken(string systemId)
        {
            var claims = new[]
            {
                new Claim("systemId", systemId),
            };

            string SecretKey = "NpzedRHDaT8uSc10ntMJ+ohvUJ/VJYdHs1LyK3KP+Q0=";

            var key = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(SecretKey));
            var creds = new SigningCredentials(key, SecurityAlgorithms.HmacSha256);

            var token = new JwtSecurityToken(
                issuer: "hi_ap_access_dll",
                audience: "hi_ap_access_web",
                claims: claims,
                expires: DateTime.Now.AddHours(1),
                signingCredentials: creds
            );

            return new JwtSecurityTokenHandler().WriteToken(token);
        }
    }

APACCESS_DLL主方法:
// 取得頁面跟權限設定功能連結
        public string GetFunctionAndAccessUrl(string requestJson)
        {
            FGetFunctionAndAccessUrl func = new FGetFunctionAndAccessUrl();
            var response = new GetFunctionAndAccessUrlModel.GetFunctionAndAccessUrlResponse();

            try
            {
                var request = JsonConvert.DeserializeObject<GetFunctionAndAccessUrlModel.GetFunctionAndAccessUrlRequest>(requestJson);

                // 檢查類型
                if (!func.TypeActions.ContainsKey(request.Type))
                {
                    response.Result_code = Codes.TYPE_ERROR;
                    response.Msg = "類型錯誤，只接受 1 或 2";
                    response.Url = "";
                    return JsonConvert.SerializeObject(response);
                }

                // 檢查環境
                if (!func.EnvironmentUrls.ContainsKey(request.Environment))
                {
                    response.Result_code = Codes.ENV_ERROR;
                    response.Msg = "環境錯誤，只接受 TEST、PROD";
                    response.Url = "";
                    return JsonConvert.SerializeObject(response);
                }

                // 檢查系統授權
                var authorizedSystems = func.GetAuthorizedSystemsList(request.Environment);
                if (!authorizedSystems.Contains(request.SysID))
                {
                    response.Result_code = Codes.NO_PERMISSION;
                    response.Msg = "查無權限";
                    response.Url = "";
                    return JsonConvert.SerializeObject(response);
                }

                // 產生 Token
                string token = func.GenerateJwtToken(request.SysID);
                string baseUrl = func.EnvironmentUrls[request.Environment];
                string action = func.TypeActions[request.Type];
                string finalUrl = $"{baseUrl}/Home/{action}?token={token}";

                // 成功
                response.Result_code = Codes.SUCCESS;
                response.Msg = "成功";
                response.Url = finalUrl;
            }
            catch (Exception ex)
            {
                response.Result_code = Codes.SYSTEM_ERROR;
                response.Msg = "系統錯誤：" + ex.Message;
                response.Url = "";
            }

            return JsonConvert.SerializeObject(response);
        }

別的站台連接入口:
        // 權限管理導向 URL
        public ActionResult AP_ACCESS_SYS()
        {
            try
            {
                var req_para = new POSFILE_APPLY.Models.M_AP.GetUrlRequsetModel()
                {
                    SysID = "HI_POSIMG",
                    Type = "2" ,
                    Environment = "DEV"
                };

                string json_input = JsonConvert.SerializeObject(req_para);
                string response = new HI_APACCESS_DLL.APACCESS().GetFunctionAndAccessUrl(json_input);
                POSFILE_APPLY.Models.M_AP.GetUrlResponseModel response_ = JsonConvert.DeserializeObject<POSFILE_APPLY.Models.M_AP.GetUrlResponseModel>(response);

                if (response_.Result_code == "0000")
                {
                    string script = $@"
                    <script>
                       window.open('{response_.Url}', '_blank');                       
                       window.location.href='{Url.Action("Main", "Home")}';
                    </script>";
                    return Content(script, "text/html");
                }
                else
                {
                    return Content($"<script>alert('取得權限管理連結失敗：{response_.Msg}');</script>", "text/html");
                }
            }
            catch (Exception ex)
            {
                return Content($"<script>alert('導向權限管理系統發生錯誤：{ex.Message}');</script>", "text/html");
            }
        }

        // 系統頁面管理導向
        public ActionResult AP_ACCESS_SYS_FUNC()
        {
            try
            {
                var req_para = new POSFILE_APPLY.Models.M_AP.GetUrlRequsetModel()
                {
                    SysID = "HI_POSIMG",
                    Type = "1" ,         
                    Environment = "DEV"
                };

                string json_input = JsonConvert.SerializeObject(req_para);
                string response = new HI_APACCESS_DLL.APACCESS().GetFunctionAndAccessUrl(json_input);
                POSFILE_APPLY.Models.M_AP.GetUrlResponseModel response_ = JsonConvert.DeserializeObject<POSFILE_APPLY.Models.M_AP.GetUrlResponseModel>(response);

                if (response_.Result_code == "0000")
                {
                    string script = $@"
                    <script>
                       window.open('{response_.Url}', '_blank');                       
                       window.location.href='{Url.Action("Main", "Home")}';
                    </script>";
                    return Content(script, "text/html");
                }
                else
                {
                    return Content($"<script>alert('取得頁面功能管理連結失敗：{response_.Msg}');</script>", "text/html");
                }
            }
            catch (Exception ex)
            {
                return Content($"<script>alert('導向權限管理系統發生錯誤：{ex.Message}');</script>", "text/html");
            }
        }
