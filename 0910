懂了！你要把 GroupID 一起塞進 JWT，並且把 請求參數 也加上 GroupID。下面給你「可直接貼上用」的重點改版（都有標註 // CHANGED / // NEW）：

⸻

一、Model：GetFunctionAndAccessUrlModel（請加上 GroupID）

// Models/GetFunctionAndAccessUrlModel.cs
using Newtonsoft.Json;
using System.ComponentModel;

namespace HI_APACCESS_DLL.Models
{
    internal class GetFunctionAndAccessUrlModel
    {
        internal class GetFunctionAndAccessUrlRequest
        {
            [JsonProperty]
            [DisplayName("系統ID")]
            internal string SysID { get; set; }

            [JsonProperty]                      // NEW
            [DisplayName("群組代號")]            // NEW
            internal string GroupID { get; set; } // NEW

            [JsonProperty]
            [DisplayName("類型(1:頁面&按鈕設定, 2:權限設定)")]
            internal string Type { get; set; }

            [JsonProperty]
            [DisplayName("環境(DEV/TEST/PROD)")]
            internal string Environment { get; set; }
        }

        internal class GetFunctionAndAccessUrlResponse
        {
            [JsonProperty]
            internal string Result_code { get; set; }

            [JsonProperty]
            internal string Msg { get; set; }

            [JsonProperty]
            internal string Url { get; set; }
        }
    }
}


⸻

二、Factory：FGetFunctionAndAccessUrl（JWT 內加 groupId）

// Factory/FGetFunctionAndAccessUrl.cs
using Microsoft.IdentityModel.Tokens;
using System;
using System.Collections.Generic;
using System.IdentityModel.Tokens.Jwt;
using System.Security.Claims;
using System.Text;

namespace HI_APACCESS_DLL.Factory
{
    internal class FGetFunctionAndAccessUrl
    {
        // 環境設定
        internal readonly Dictionary<string, string> EnvironmentUrls = new Dictionary<string, string>
        {
            { "DEV",  "http://localhost:53088" },
            { "TEST", "http://10.8.254.68/HI_APACCESS_TEST" },
            { "PROD", "http://10.8.254.68/HI_APACCESS" },
        };

        // 類型設定
        internal readonly Dictionary<string, string> TypeActions = new Dictionary<string, string>
        {
            { "1", "TokenEntry_FUNC" },
            { "2", "TokenEntry" }
        };

        // 取得授權系統清單（呼叫 FCommon）
        internal List<string> GetAuthorizedSystemsList(string environment)
        {
            return FCommon.GetAuthorizedSystemsList(environment);
        }

        // 產 JWT Token  // CHANGED: 加入 groupId
        internal string GenerateJwtToken(string systemId, string groupId) // CHANGED
        {
            var claims = new List<Claim>
            {
                new Claim("systemId", systemId ?? string.Empty),
                new Claim("groupId",  groupId  ?? string.Empty), // NEW
            };

            const string SecretKey = "NpzedRHDaT8uSc10ntMJ+ohvUJ/VJYdHs1LyK3KP+Q0=";
            var key   = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(SecretKey));
            var creds = new SigningCredentials(key, SecurityAlgorithms.HmacSha256);

            var token = new JwtSecurityToken(
                issuer:  "hi_ap_access_dll",
                audience:"hi_ap_access_web",
                claims:  claims,
                expires: DateTime.Now.AddHours(1),
                signingCredentials: creds
            );

            return new JwtSecurityTokenHandler().WriteToken(token);
        }
    }
}


⸻

三、APACCESS 主方法：GetFunctionAndAccessUrl（接收 GroupID 並帶入 Token）

// APACCESS.cs（片段）
using HI_APACCESS_DLL.Factory;
using HI_APACCESS_DLL.Models;
using Newtonsoft.Json;
using static HI_APACCESS_DLL.Common;

public partial class APACCESS
{
    // 取得頁面跟權限設定功能連結
    public string GetFunctionAndAccessUrl(string requestJson)
    {
        var func = new FGetFunctionAndAccessUrl();
        var response = new GetFunctionAndAccessUrlModel.GetFunctionAndAccessUrlResponse();

        try
        {
            var request = JsonConvert.DeserializeObject<GetFunctionAndAccessUrlModel.GetFunctionAndAccessUrlRequest>(requestJson);

            // 類型檢查
            if (!func.TypeActions.ContainsKey(request.Type))
            {
                response.Result_code = Codes.TYPE_ERROR;
                response.Msg = "類型錯誤，只接受 1 或 2";
                response.Url = "";
                return JsonConvert.SerializeObject(response);
            }

            // 環境檢查   // CHANGED: 接受 DEV/TEST/PROD
            if (!func.EnvironmentUrls.ContainsKey(request.Environment))
            {
                response.Result_code = Codes.ENV_ERROR;
                response.Msg = "環境錯誤，只接受 DEV、TEST、PROD";
                response.Url = "";
                return JsonConvert.SerializeObject(response);
            }

            // 系統授權檢查
            var authorizedSystems = func.GetAuthorizedSystemsList(request.Environment);
            if (!authorizedSystems.Contains(request.SysID))
            {
                response.Result_code = Codes.NO_PERMISSION;
                response.Msg = "查無權限";
                response.Url = "";
                return JsonConvert.SerializeObject(response);
            }

            // 產生 Token（把 GroupID 一起塞進去） // CHANGED
            string token   = func.GenerateJwtToken(request.SysID, request.GroupID);
            string baseUrl = func.EnvironmentUrls[request.Environment];
            string action  = func.TypeActions[request.Type];

            // Token 帶在 QueryString
            string finalUrl = $"{baseUrl}/Home/{action}?token={token}";

            response.Result_code = Codes.SUCCESS;
            response.Msg = "成功";
            response.Url = finalUrl;
        }
        catch (Exception ex)
        {
            response.Result_code = Codes.SYSTEM_ERROR;
            response.Msg = "系統錯誤：" + ex.Message;
            response.Url = "";
        }

        return JsonConvert.SerializeObject(response);
    }
}


⸻

四、呼叫端（別站入口）也要多帶 GroupID

你在 POS 專案裡兩個入口都要把 GroupID 帶過去（例如用你現有的 emp_APG_NO 或透過 SVS_員工基本資料.Get_員工基本資料(AD) 取得）。

// 權限管理導向 URL
public ActionResult AP_ACCESS_SYS()
{
    try
    {
        // 例：從 BaseController 或目前登入者抓群組
        var apgNo = this.APG_NO; // 若你有這個欄位
        // 若沒有，請用：var apgNo = SVS_員工基本資料.Get_員工基本資料(SVS_員工基本資料.Get_員工AD())?.APG_NO;

        var req_para = new POSFILE_APPLY.Models.M_AP.GetUrlRequsetModel()
        {
            SysID = "HI_POSIMG",
            GroupID = apgNo,          // NEW
            Type = "2",
            Environment = "DEV"
        };

        string json_input = JsonConvert.SerializeObject(req_para);
        string response = new HI_APACCESS_DLL.APACCESS().GetFunctionAndAccessUrl(json_input);
        var response_ = JsonConvert.DeserializeObject<POSFILE_APPLY.Models.M_AP.GetUrlResponseModel>(response);

        if (response_.Result_code == "0000")
        {
            string script = $@"
                <script>
                   window.open('{response_.Url}', '_blank');
                   window.location.href='{Url.Action("Main", "Home")}';
                </script>";
            return Content(script, "text/html");
        }
        else
        {
            return Content($"<script>alert('取得權限管理連結失敗：{response_.Msg}');</script>", "text/html");
        }
    }
    catch (Exception ex)
    {
        return Content($"<script>alert('導向權限管理系統發生錯誤：{ex.Message}');</script>", "text/html");
    }
}

// 系統頁面管理導向
public ActionResult AP_ACCESS_SYS_FUNC()
{
    try
    {
        var apgNo = this.APG_NO; // 同上

        var req_para = new POSFILE_APPLY.Models.M_AP.GetUrlRequsetModel()
        {
            SysID = "HI_POSIMG",
            GroupID = apgNo,          // NEW
            Type = "1",
            Environment = "DEV"
        };

        string json_input = JsonConvert.SerializeObject(req_para);
        string response = new HI_APACCESS_DLL.APACCESS().GetFunctionAndAccessUrl(json_input);
        var response_ = JsonConvert.DeserializeObject<POSFILE_APPLY.Models.M_AP.GetUrlResponseModel>(response);

        if (response_.Result_code == "0000")
        {
            string script = $@"
                <script>
                   window.open('{response_.Url}', '_blank');
                   window.location.href='{Url.Action("Main", "Home")}';
                </script>";
            return Content(script, "text/html");
        }
        else
        {
            return Content($"<script>alert('取得頁面功能管理連結失敗：{response_.Msg}');</script>", "text/html");
        }
    }
    catch (Exception ex)
    {
        return Content($"<script>alert('導向權限管理系統發生錯誤：{ex.Message}');</script>", "text/html");
    }
}

呼叫端的 RequestModel 也要多一個 GroupID 欄位（你原本的 POSFILE_APPLY.Models.M_AP.GetUrlRequsetModel 請加上 public string GroupID { get; set; }）。

⸻

小重點
	•	環境：已允許 DEV/TEST/PROD（DLL 內判斷已更新）。
	•	JWT：現在的 Token 會帶兩個 claim：systemId、groupId。
	•	URL：仍然只帶 token 在 query string，群組在 Token 內解即可。
	•	相容性：既有呼叫只要加上 GroupID 即可，其餘不變。

需要我順手把 web 端解析 token 加上 groupId 的讀取範例（TokenEntry / TokenEntry_FUNC 兩個 Action）嗎？