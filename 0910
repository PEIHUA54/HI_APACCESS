好👌 我幫你把 FGetAllUser / FGetGroupAllUser 改版後完整程式碼生出來，包含 UserAD 回傳，還有 Model 的更新。

⸻

🔹 FGetAllUser.cs (改版後)

using HI_APACCESS_DLL.Models;
using Microsoft.Data.SqlClient;
using System;
using System.Collections.Generic;

namespace HI_APACCESS_DLL.Factory
{
    internal class FGetAllUser
    {
        internal GetAllUserModel.GetAllUserResponse Execute(string sysId, string environment)
        {
            var response = new GetAllUserModel.GetAllUserResponse();

            try
            {
                // 1. 環境檢查
                if (environment != "TEST" && environment != "PROD")
                {
                    response.Result_code = Common.Codes.ENV_ERROR;
                    response.Msg = "環境錯誤，只接受 TEST 或 PROD";
                    return response;
                }

                // 2. 系統授權檢查
                var authorizedSystems = FCommon.GetAuthorizedSystemsList(environment);
                if (!authorizedSystems.Contains(sysId))
                {
                    response.Result_code = Common.Codes.SYS_UNAUTHORIZED;
                    response.Msg = "系統未授權";
                    return response;
                }

                var resultList = new List<GetAllUserModel.ResultData>();

                using (SqlConnection conn = new SqlConnection(FCommon.BuildConnectionString(environment)))
                {
                    conn.Open();

                    string sql = @"
SELECT 
    U.U_ID   AS UserID,
    U.U_NAME AS UserName,
    ISNULL(LTRIM(RTRIM(E.EMP_DOM_ID)), '') AS UserAD
FROM [HI_AUTOS].[dbo].[AP_USER] U
LEFT JOIN [HILIFE_MTS].[HI_APUSER].dbo.[NT_EMP] E
    ON E.EMP_ID = U.U_ID
WHERE U.SYS_ID = @SysID
ORDER BY U.U_ID";

                    using (SqlCommand cmd = new SqlCommand(sql, conn))
                    {
                        cmd.Parameters.AddWithValue("@SysID", sysId);

                        using (var reader = cmd.ExecuteReader())
                        {
                            while (reader.Read())
                            {
                                resultList.Add(new GetAllUserModel.ResultData
                                {
                                    UserID = reader["UserID"].ToString(),
                                    UserName = reader["UserName"].ToString(),
                                    UserAD = reader["UserAD"].ToString()
                                });
                            }
                        }
                    }
                }

                if (resultList.Count == 0)
                {
                    response.Result_code = Common.Codes.NO_PERMISSION;
                    response.Msg = "查無人員";
                }
                else
                {
                    response.Result_code = Common.Codes.SUCCESS;
                    response.Msg = "成功";
                    response.Result = resultList;
                }
            }
            catch (Exception ex)
            {
                response.Result_code = Common.Codes.SYSTEM_ERROR;
                response.Msg = "系統錯誤：" + ex.Message;
            }

            return response;
        }
    }
}


⸻

🔹 FGetGroupAllUser.cs (改版後)

using HI_APACCESS_DLL.Models;
using Microsoft.Data.SqlClient;
using System;
using System.Collections.Generic;
using System.Linq;

namespace HI_APACCESS_DLL.Factory
{
    internal class FGetGroupAllUser
    {
        internal GetGroupAllUserModel.GetGroupAllUserResponse Execute(string sysId, string groupId, bool isIncludeChildGroups, string environment)
        {
            var response = new GetGroupAllUserModel.GetGroupAllUserResponse();

            try
            {
                // 1. 環境檢查
                if (environment != "TEST" && environment != "PROD")
                {
                    response.Result_code = Common.Codes.ENV_ERROR;
                    response.Msg = "環境錯誤，只接受 TEST 或 PROD";
                    return response;
                }

                // 2. 系統授權檢查
                var authorizedSystems = FCommon.GetAuthorizedSystemsList(environment);
                if (!authorizedSystems.Contains(sysId))
                {
                    response.Result_code = Common.Codes.SYS_UNAUTHORIZED;
                    response.Msg = "系統未授權";
                    return response;
                }

                var resultList = new List<GetGroupAllUserModel.ResultData>();

                using (SqlConnection conn = new SqlConnection(FCommon.BuildConnectionString(environment)))
                {
                    conn.Open();

                    // 群組清單
                    var groupIds = new List<string> { groupId };

                    if (isIncludeChildGroups)
                    {
                        string sqlChild = @"SELECT APG_NO 
                                            FROM [HI_AUTOS].[dbo].[AP_GROUP] 
                                            WHERE SYS_ID=@SysID AND PARENT_APG_NO=@GroupID";

                        using (SqlCommand cmd = new SqlCommand(sqlChild, conn))
                        {
                            cmd.Parameters.AddWithValue("@SysID", sysId);
                            cmd.Parameters.AddWithValue("@GroupID", groupId);

                            using (var reader = cmd.ExecuteReader())
                            {
                                while (reader.Read())
                                {
                                    groupIds.Add(reader["APG_NO"].ToString());
                                }
                            }
                        }
                    }

                    // 取使用者清單 (加上 AD)
                    string sqlUser = $@"
SELECT DISTINCT 
    U.U_ID   AS UserID,
    U.U_NAME AS UserName,
    ISNULL(LTRIM(RTRIM(E.EMP_DOM_ID)), '') AS UserAD
FROM [HI_AUTOS].[dbo].[AP_USER] U
LEFT JOIN [HILIFE_MTS].[HI_APUSER].dbo.[NT_EMP] E
    ON E.EMP_ID = U.U_ID
WHERE U.SYS_ID = @SysID 
  AND U.APG_NO IN ({string.Join(",", groupIds.Select((g, i) => $"@Group{i}"))})
ORDER BY U.U_ID";

                    using (SqlCommand cmd = new SqlCommand(sqlUser, conn))
                    {
                        cmd.Parameters.AddWithValue("@SysID", sysId);
                        for (int i = 0; i < groupIds.Count; i++)
                        {
                            cmd.Parameters.AddWithValue($"@Group{i}", groupIds[i]);
                        }

                        using (var reader = cmd.ExecuteReader())
                        {
                            while (reader.Read())
                            {
                                resultList.Add(new GetGroupAllUserModel.ResultData
                                {
                                    UserID = reader["UserID"].ToString(),
                                    UserName = reader["UserName"].ToString(),
                                    UserAD = reader["UserAD"].ToString()
                                });
                            }
                        }
                    }
                }

                if (resultList.Count == 0)
                {
                    response.Result_code = Common.Codes.NO_PERMISSION;
                    response.Msg = "查無人員";
                }
                else
                {
                    response.Result_code = Common.Codes.SUCCESS;
                    response.Msg = "成功";
                    response.Result = resultList;
                }
            }
            catch (Exception ex)
            {
                response.Result_code = Common.Codes.SYSTEM_ERROR;
                response.Msg = "系統錯誤：" + ex.Message;
            }

            return response;
        }
    }
}


⸻

🔹 Model 更新 (共用)

GetAllUserModel.ResultData

public class ResultData
{
    public string UserID { get; set; }
    public string UserName { get; set; }
    public string UserAD { get; set; }   // 新增
}

GetGroupAllUserModel.ResultData

public class ResultData
{
    public string UserID { get; set; }
    public string UserName { get; set; }
    public string UserAD { get; set; }   // 新增
}


⸻

✅ 這樣回傳的 JSON 會長這樣：

GetAllUser 成功回傳

{
  "Result_code": "0000",
  "Msg": "成功",
  "Result": [
    { "UserID": "12345", "UserName": "王小明", "UserAD": "XMING" },
    { "UserID": "54321", "UserName": "陳小美", "UserAD": "CMEI" }
  ]
}


⸻

要不要我也幫你把 HI_APACCESS 主類別裡面的 GetAllUser()、GetGroupAllUser() API 方法改成新版，直接呼叫這兩個 Factory？