using HI_APACCESS_DLL.Models;
using Microsoft.Data.SqlClient; // 若你的專案用 System.Data.SqlClient，換回去即可
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Data;

namespace HI_APACCESS_DLL.Factory
{
    internal class FGetUserNameAndGroup
    {
        internal GetUserNameAndGroupModel.GetUserNameAndGroupResponse Execute(string sysId, string userAd, string environment)
        {
            var response = new GetUserNameAndGroupModel.GetUserNameAndGroupResponse();

            try
            {
                // 1) 環境檢查
                if (environment != "TEST" && environment != "PROD")
                {
                    response.Result_code = Common.Codes.ENV_ERROR;
                    response.Msg = "環境錯誤，只接受 TEST 或 PROD";
                    return response;
                }

                // 2) 系統授權檢查
                var authorized = FCommon.GetAuthorizedSystemsList(environment);
                if (!authorized.Contains(sysId))
                {
                    response.Result_code = Common.Codes.SYS_UNAUTHORIZED;
                    response.Msg = "系統未授權";
                    return response;
                }

                // 3) AD → 員編
                string empNo = FIdentity.GetEmpNoByAD(userAd, environment);
                if (string.IsNullOrWhiteSpace(empNo))
                {
                    response.Result_code = Common.Codes.NO_PERMISSION;
                    response.Msg = "無法由 AD 取得員編";
                    return response;
                }

                using (var conn = new SqlConnection(FCommon.BuildConnectionString(environment)))
                {
                    conn.Open();

                    // 4) 先把「使用者在此系統的主群組」取出來
                    //    ★ 關鍵修正：AP_USER 與 AP_GROUP 連結要同時比 SYS_ID + APG_NO
                    //    並且 WHERE 也要限制 B.SYS_ID=@SysID，避免抓到別的系統的群組
                    string sqlMain = @"
;WITH base AS (
    SELECT TOP (1)
        B.U_ID           AS UserID,
        B.U_NAME         AS UserName,
        B.APG_NO         AS GroupID
    FROM [HI_TMMAIN].[dbo].[AP_USER] B
    WHERE B.SYS_ID = @SysID
      AND B.U_ID   = @EmpNo
)
SELECT
    b.UserID,
    b.UserName,
    g.APG_NO                AS GroupID,
    g.APG_NAME              AS GroupName,
    g.PARENT_APG_NO         AS ParentGroupCSV,
    g.SENSITIVE_DATA_ACCESS AS SensitiveDataAccess,
    m.ORGAN_CAP             AS OrganName,
    m.POST_NAME             AS PostName
FROM base b
JOIN [HI_TMMAIN].[dbo].[AP_GROUP] g
  ON g.SYS_ID = @SysID
 AND g.APG_NO = b.GroupID
LEFT JOIN [HI_TMMAIN].[dbo].[VW_M1EMP_MAST] m
  ON m.EMP_NO = b.UserID;
";

                    string userId = null;
                    string userName = null;
                    string groupId = null;
                    string groupName = null;
                    bool sensitive = false;
                    string parentCsv = null;
                    string organName = null;
                    string postName = null;

                    using (var cmd = new SqlCommand(sqlMain, conn))
                    {
                        cmd.Parameters.AddWithValue("@SysID", sysId);
                        cmd.Parameters.AddWithValue("@EmpNo", empNo);

                        using (var r = cmd.ExecuteReader())
                        {
                            if (!r.Read())
                            {
                                response.Result_code = Common.Codes.NO_PERMISSION;
                                response.Msg = "查無權限";
                                return response;
                            }

                            userId    = r["UserID"]?.ToString();
                            userName  = r["UserName"]?.ToString();
                            groupId   = r["GroupID"]?.ToString();
                            groupName = r["GroupName"]?.ToString();
                            parentCsv = r["ParentGroupCSV"]?.ToString();
                            sensitive = r["SensitiveDataAccess"] != DBNull.Value && Convert.ToBoolean(r["SensitiveDataAccess"]);
                            organName = r["OrganName"]?.ToString();
                            postName  = r["PostName"]?.ToString();
                        }
                    }

                    // 5) 依據 groupId 取「子群組」
                    //    定義：同一個 SYS_ID 下，任何一筆 AP_GROUP 的 PARENT_APG_NO 中包含我的 groupId，即為我的子群組
                    var childGroups = new List<string>();
                    string sqlChild = @"
SELECT G.APG_NO
FROM [HI_TMMAIN].[dbo].[AP_GROUP] G
WHERE G.SYS_ID = @SysID
  AND EXISTS (
        SELECT 1
        FROM STRING_SPLIT(G.PARENT_APG_NO, ',') s
        WHERE LTRIM(RTRIM(s.value)) = @BaseGroup
  )
";
                    using (var cmd = new SqlCommand(sqlChild, conn))
                    {
                        cmd.Parameters.AddWithValue("@SysID", sysId);
                        cmd.Parameters.AddWithValue("@BaseGroup", groupId ?? string.Empty);

                        using (var r = cmd.ExecuteReader())
                        {
                            while (r.Read())
                            {
                                childGroups.Add(r["APG_NO"].ToString());
                            }
                        }
                    }

                    // 6) 母群組：直接取 AP_GROUP.PARENT_APG_NO（它存的是 CSV，如 "003,002"...）
                    //    轉成 List<string>
                    var parentGroups = new List<string>();
                    if (!string.IsNullOrWhiteSpace(parentCsv))
                    {
                        foreach (var p in parentCsv.Split(','))
                        {
                            var v = p?.Trim();
                            if (!string.IsNullOrWhiteSpace(v)) parentGroups.Add(v);
                        }
                    }

                    // 7) 組 Response
                    response.Result_code = Common.Codes.SUCCESS;
                    response.Msg = "成功";
                    response.Result = new GetUserNameAndGroupModel.ResultData
                    {
                        UserID             = userId,
                        UserName           = userName,
                        GroupID            = groupId,
                        GroupName          = groupName,
                        ParentGroupID      = parentGroups,  // List<string>
                        ChildGroupID       = childGroups,   // List<string>
                        SensitiveDataAccess= sensitive,
                        OrganName          = organName,
                        PostName           = postName
                    };
                }
            }
            catch (Exception ex)
            {
                response.Result_code = Common.Codes.SYSTEM_ERROR;
                response.Msg = "系統錯誤：" + ex.Message;
            }

            return response;
        }
    }
}

