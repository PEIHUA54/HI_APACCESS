沒問題！我用你「原本的 JS 介面與同一個 Action 名稱」來改，邏輯是兩段式：
	•	先打 DeleteFunction 檢查
	•	沒權限 → 直接刪除並回傳成功
	•	有權限 → 回傳 needConfirm=true 與訊息
	•	前端收到 needConfirm 後 confirm()，同樣再呼叫 同一個 DeleteFunction，但帶 confirm=true，後端才會真的清掉頁面＋所有相關權限/按鈕。

⸻

Controller（沿用同一 Action 名稱）

[HttpPost]
public JsonResult DeleteFunction(string func_id, string sysID, bool confirm = false)
{
    try
    {
        var service = GetAPService();

        // 第一次：只檢查
        bool hasPermissions = !service.CanDeleteFunction(func_id);
        if (hasPermissions && !confirm)
        {
            return Json(new
            {
                success = false,
                needConfirm = true,
                message = "該頁面已有權限設定，將會清除此頁面所有相關權限設定及按鈕設定，確定要刪除嗎?"
            });
        }

        // 真的刪（無權限 or 已經二次確認）
        var result = service.DeleteFunction(func_id);
        if (result == null || !result.Contains("fail"))
        {
            return Json(new { success = true, message = "頁面刪除成功" });
        }
        else
        {
            return Json(new { success = false, message = "頁面刪除失敗：" + result });
        }
    }
    catch (Exception ex)
    {
        return Json(new { success = false, message = "刪除頁面發生錯誤：" + ex.Message });
    }
}


⸻

JS（你的原函式，內部微調）

function deletePage(funcId, funcName) {
    // 第一次呼叫：先檢查是否有權限設定
    $.post('@Url.Action("DeleteFunction", "AP")', { func_id: funcId, sysID: currentSysID }, function (response) {
        // 有權限 → 顯示你要的提示訊息，再次呼叫同一 Action，但帶 confirm=true
        if (response.needConfirm) {
            if (confirm(response.message)) {
                $.post('@Url.Action("DeleteFunction", "AP")', { func_id: funcId, sysID: currentSysID, confirm: true }, function (res2) {
                    alert(res2.message);

                    if (res2.success) {
                        // 如果刪的是目前選中的頁面，清空右側 UI
                        if (currentSelectedPage === funcId) {
                            currentSelectedPage = '';
                            $('#buttonList').html('<div class="no-data">請先選擇左側的頁面</div>');
                            $('#addButtonBtn').prop('disabled', true);
                            $('#buttonSection').removeClass('hide-add-button');
                        }
                        loadPages();
                    }
                });
            }
            return;
        }

        // 沒有權限設定 → 直接刪除完成
        alert(response.message);

        if (response.success) {
            if (currentSelectedPage === funcId) {
                currentSelectedPage = '';
                $('#buttonList').html('<div class="no-data">請先選擇左側的頁面</div>');
                $('#addButtonBtn').prop('disabled', true);
                $('#buttonSection').removeClass('hide-add-button');
            }
            loadPages();
        }
    });
}

重點：
	•	仍然只有 一支 DeleteFunction
	•	只多帶一個 confirm（預設 false）參數，避免再多開新 Action
	•	提示內容完全照你指定的文案
	•	其餘前端 UI 行為維持你原本寫法（刪除後刷新、清空右側等）