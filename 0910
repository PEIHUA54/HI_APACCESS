👌我懂你的意思了。你現在要的是：
	•	保留原本 SVS_員工基本資料 / SVS_客製化元件 的呼叫邏輯（對外介面、回傳資料結構都一樣）。
	•	但內部的 SQL 全部改成呼叫 DLL 功能 1～5，確保新版也能正常跑。

我幫你完整改版，分成兩份。

⸻

🔹新版 SVS_員工基本資料（改成呼叫 DLL 功能 1、3、4）

using HI_APACCESS_DLL_FRAMEWORK;
using Newtonsoft.Json;
using POSFILE_APPLY.ViewModels;
using POSFILE_APPLY.Models; // M_AP.Request/Response Models
using System;
using System.Collections.Generic;
using System.Linq;

namespace POSFILE_APPLY.Service
{
    public class SVS_員工基本資料
    {
        #region AD、員編

        /// <summary>
        /// 取得員工AD (不變)
        /// </summary>
        internal static string Get_員工AD()
        {
            string EMP_DOM_ID = System.Web.HttpContext.Current.User.Identity.Name.Substring(System.Web.HttpContext.Current.User.Identity.Name.LastIndexOf("\\") + 1);

            if (String.IsNullOrEmpty(EMP_DOM_ID))
            {
                var principal = new System.Security.Principal.WindowsPrincipal(System.Security.Principal.WindowsIdentity.GetCurrent());
                string name = principal.Identity.Name;
                string[] adname = name.Split(new string[] { "\\" }, StringSplitOptions.RemoveEmptyEntries);
                EMP_DOM_ID = adname[1].ToString().ToUpper();
            }
            return EMP_DOM_ID;
        }

        /// <summary>
        /// 取得員工編號 (呼叫 DLL 功能1)
        /// </summary>
        internal static string Get_員工編號(string sysId = "HI_POSIMG", string ad = null, string environment = "TEST")
        {
            var req = new M_AP.GetUserNameAndGroupRequestModel
            {
                SysID = sysId,
                UserAD = string.IsNullOrEmpty(ad) ? Get_員工AD() : ad,
                Environment = environment
            };

            string json_input = JsonConvert.SerializeObject(req);
            string response = new APACCESS().GetUserNameAndGroup(json_input);
            var res = JsonConvert.DeserializeObject<M_AP.GetUserNameAndGroupResponseModel>(response);

            return res?.Result?.UserID ?? req.UserAD; // 沒找到就回傳 AD
        }

        #endregion

        /// <summary>
        /// 取得員工基本資料 (呼叫 DLL 功能1)
        /// </summary>
        internal static VM_Employee.VM_員工部門職稱 Get_員工基本資料(string sysId, string ad, string environment = "TEST")
        {
            var req = new M_AP.GetUserNameAndGroupRequestModel
            {
                SysID = sysId,
                UserAD = ad,
                Environment = environment
            };

            string json_input = JsonConvert.SerializeObject(req);
            string response = new APACCESS().GetUserNameAndGroup(json_input);
            var res = JsonConvert.DeserializeObject<M_AP.GetUserNameAndGroupResponseModel>(response);

            if (res?.Result == null) return null;

            return new VM_Employee.VM_員工部門職稱
            {
                AD = req.UserAD,
                EMP_NO = res.Result.UserID,
                EMP_NAME = res.Result.UserName,
                POST_NAME = res.Result.PostName,
                ORGAN_CAP = res.Result.OrganName,
                APG_NO = res.Result.GroupID
            };
        }

        /// <summary>
        /// 取得巢狀的權限樹 (呼叫 DLL 功能3)
        /// </summary>
        internal static List<VM_Employee.WebTree_Node> Get_Tree(string sysId, string groupId, string environment = "TEST")
        {
            var req = new M_AP.GetTreeRequestModel
            {
                SysID = sysId,
                GroupID = groupId,
                Environment = environment
            };

            string json_input = JsonConvert.SerializeObject(req);
            string response = new APACCESS().GetTree(json_input);
            var res = JsonConvert.DeserializeObject<M_AP.GetTreeResponseModel>(response);

            if (res?.Result == null) return new List<VM_Employee.WebTree_Node>();

            return res.Result.Select(x => new VM_Employee.WebTree_Node
            {
                FUNC_ID = x.FuncID,
                FUNC_NA = x.FuncName,
                PARENT_ID = x.ParentID,
                NODE = x.Level, // 你原本是靠 NODE 做階層，這邊用 Level
                VIEW_H = x.Controller,
                VIEW_HB = x.Action
            }).ToList();
        }

        /// <summary>
        /// 取得資料面最高權限 (暫時保留原SQL，因為 DLL 沒這功能)
        /// </summary>
        internal static bool Get_資料面最高權限(string Emp_NO)
        {
            string SQLStrings = SVS_DBmanager.GetQuery(SVS_DBmanager.QueryKey.Get_資料面最高權限);

            List<SqlParameter> Paras = new List<SqlParameter>()
            {
                new SqlParameter("@Emp_NO", Emp_NO),
            };
            DataTable table = new SVS_DBmanager().QueryBySQL(SQLStrings, Paras);

            if (table != null && table.Rows.Count > 0
                && Convert.ToInt16(table.Rows[0]["SUP_NUM"].ToString()) > 0)
            {
                return false;
            }
            return true;
        }
    }
}


⸻

🔹新版 SVS_客製化元件（改成呼叫 DLL 功能5）

using HI_APACCESS_DLL_FRAMEWORK;
using Newtonsoft.Json;
using POSFILE_APPLY.Models;
using System.Collections.Generic;
using System.Web.Mvc;

namespace POSFILE_APPLY.Service
{
    public static class SVS_客製化元件
    {
        /// <summary>
        /// 新版 Hi_Btn - 使用 DLL 功能5 確認按鈕權限
        /// </summary>
        public static MvcHtmlString Hi_Btn(this HtmlHelper helper,
            string sysId, string groupId, string funcId, string btnId,
            string text, string type, object htmlAttributes, string environment = "TEST")
        {
            var req = new M_AP.CheckBtnEnabledRequestModel
            {
                SysID = sysId,
                GroupID = groupId,
                FuncID = funcId,
                BtnID = btnId,
                Environment = environment
            };

            string json = JsonConvert.SerializeObject(req);
            string raw = new APACCESS().CheckBtnEnabled(json);
            var res = JsonConvert.DeserializeObject<M_AP.CheckBtnEnabledResponseModel>(raw);

            if (res == null || !res.Result) return null;

            // 有權限 → 產生按鈕
            var tb = new TagBuilder("button");
            if (!string.IsNullOrWhiteSpace(text)) tb.InnerHtml = text;
            if (!string.IsNullOrWhiteSpace(btnId)) tb.Attributes["id"] = btnId;
            if (!string.IsNullOrWhiteSpace(type)) tb.Attributes["type"] = type;

            if (htmlAttributes != null)
            {
                var dict = JsonConvert.DeserializeObject<Dictionary<string, string>>(
                    JsonConvert.SerializeObject(htmlAttributes));
                foreach (var kv in dict)
                {
                    var key = kv.Key.Replace("_", "-");
                    tb.Attributes[key] = kv.Value;
                }
            }

            return MvcHtmlString.Create(tb.ToString());
        }
    }
}


⸻

✅這樣改版後：
	•	SVS_員工基本資料 → 功能 1 / 3 (呼叫 DLL)。
	•	SVS_客製化元件 → 功能 5 (呼叫 DLL)。
	•	Get_資料面最高權限 因為 DLL 沒有對應，暫時還保留原本 SQL。

⸻

要不要我幫你把 M_AP 的 Request/Response Model (功能1、3、5) 也補齊？這樣你的 SVS_員工基本資料 和 SVS_客製化元件 可以直接 compile。