我理解了，你要的是父層頁面和父層按鈕都在同一個藍色區塊內，然後用分隔線區分父層按鈕和子層區域。修改如下：

```javascript
// 階層式更新按鈕列表
function updateButtonListHierarchical() {
    if (allFunctions.length === 0) {
        $('#buttonList').html('<div class="no-data">無可用頁面</div>');
        return;
    }

    // 建立父子關係映射
    const parentChildMap = {};
    const parentPages = [];

    // 分離父頁面和子頁面，並過濾隱藏的子頁面
    allFunctions.forEach(func => {
        const funcId = getFuncId(func);
        const parentId = getParentId(func);

        if (!parentId || parentId === '' || parentId === 'HOME') {
            // 父頁面
            parentPages.push(func);
            if (!parentChildMap[funcId]) {
                parentChildMap[funcId] = [];
            }
        } else {
            // 子頁面 - 只要顯示的子頁面
            if (func.IS_SHOW === 'Y') {
                if (!parentChildMap[parentId]) {
                    parentChildMap[parentId] = [];
                }
                parentChildMap[parentId].push(func);
            }
        }
    });

    // 父頁面按SORT_NO排序
    parentPages.sort((a, b) => {
        const aSort = parseInt(a.SORT_NO) || 999;
        const bSort = parseInt(b.SORT_NO) || 999;
        return aSort - bSort;
    });

    // 每個父頁面的子頁面按SORT_NO排序
    Object.keys(parentChildMap).forEach(parentId => {
        parentChildMap[parentId].sort((a, b) => {
            const aSort = parseInt(a.SORT_NO) || 999;
            const bSort = parseInt(b.SORT_NO) || 999;
            return aSort - bSort;
        });
    });

    let html = '';

    // 按父頁面順序顯示
    parentPages.forEach(parentFunc => {
        const parentId = getFuncId(parentFunc);
        const parentName = getFuncName(parentFunc);
        const children = parentChildMap[parentId] || [];

        // 父頁面標題
        html += `
        <div class="parent-page-header" id="parent-header-${parentId}">
            <i class="fas fa-folder"></i> ${parentName}
            <small class="text-muted" style="font-weight: normal; margin-left: 10px;">(${parentId})</small>
        </div>`;

        // 父頁面區塊（包含父頁面本身的按鈕）
        const parentHasPagePermission = groupPermissions[parentId] && groupPermissions[parentId].hasPagePermission;
        const parentSectionStyle = parentHasPagePermission
            ? 'margin-bottom: 15px; border: 1px solid #dee2e6; border-radius: 6px; background: #f8f9fa; margin-left: 20px;'
            : 'margin-bottom: 15px; border: 1px solid #dee2e6; border-radius: 6px; background: #f5f5f5; opacity: 0.6; margin-left: 20px;';

        html += `
        <div class="page-section parent-section" id="page-section-${parentId}" style="${parentSectionStyle}">
            <div class="page-header" style="background: #e9ecef; padding: 10px 15px; border-bottom: 1px solid #dee2e6; font-weight: bold; color: #495057; display: flex; justify-content: space-between; align-items: center;">
                <span>
                    <i class="fas fa-folder-open"></i> ${parentName} (父層)
                    <small class="text-muted" style="font-weight: normal; margin-left: 10px;">(${parentId})</small>
                </span>
                <div style="display: flex; gap: 5px;">
                    <button type="button" class="btn btn-sm btn-primary" onclick="selectAllButtons('${parentId}')" style="font-size: 11px; padding: 2px 8px;" ${!parentHasPagePermission ? 'disabled' : ''}>
                        <i class="fas fa-check-square"></i> 全勾選
                    </button>
                    <button type="button" class="btn btn-sm btn-secondary" onclick="clearAllButtons('${parentId}')" style="font-size: 11px; padding: 2px 8px;" ${!parentHasPagePermission ? 'disabled' : ''}>
                        <i class="fas fa-square"></i> 全取消
                    </button>
                </div>
            </div>
            <div class="buttons-container" id="buttons-${parentId}" style="padding: 10px;">
                <div class="no-data"><i class="fas fa-spinner fa-spin"></i> 載入中...</div>
            </div>`;

        // 如果有子頁面，在父層區塊內加入分隔線，然後繼續在同一個區塊內顯示子頁面
        if (children.length > 0) {
            html += `
            <div style="margin: 10px 15px; border-top: 2px solid #6c757d; position: relative;">
                <div style="position: absolute; top: -10px; left: 50%; transform: translateX(-50%); background: #f8f9fa; padding: 0 10px; color: #6c757d; font-size: 12px; font-weight: bold;">
                    子頁面
                </div>
            </div>`;

            // 在同一個父層區塊內顯示子頁面
            children.forEach(childFunc => {
                const funcId = getFuncId(childFunc);
                const funcName = getFuncName(childFunc);
                const hasPagePermission = groupPermissions[funcId] && groupPermissions[funcId].hasPagePermission;

                html += `
                <div class="child-page-section" style="margin: 10px; border: 1px solid #ccc; border-radius: 4px; background: ${hasPagePermission ? '#fff' : '#f5f5f5'}; ${!hasPagePermission ? 'opacity: 0.6;' : ''}">
                    <div class="page-header" style="background: #f1f3f4; padding: 8px 12px; border-bottom: 1px solid #ccc; font-weight: bold; color: #495057; display: flex; justify-content: space-between; align-items: center; font-size: 14px;">
                        <span>
                            <i class="fas fa-file-alt"></i> ${funcName}
                            <small class="text-muted" style="font-weight: normal; margin-left: 10px;">(${funcId})</small>
                        </span>
                        <div style="display: flex; gap: 5px;">
                            <button type="button" class="btn btn-sm btn-primary" onclick="selectAllButtons('${funcId}')" style="font-size: 10px; padding: 1px 6px;" ${!hasPagePermission ? 'disabled' : ''}>
                                <i class="fas fa-check-square"></i> 全勾選
                            </button>
                            <button type="button" class="btn btn-sm btn-secondary" onclick="clearAllButtons('${funcId}')" style="font-size: 10px; padding: 1px 6px;" ${!hasPagePermission ? 'disabled' : ''}>
                                <i class="fas fa-square"></i> 全取消
                            </button>
                        </div>
                    </div>
                    <div class="buttons-container" id="buttons-${funcId}" style="padding: 8px;">
                        <div class="no-data"><i class="fas fa-spinner fa-spin"></i> 載入中...</div>
                    </div>
                </div>`;
            });
        }

        // 結束父頁面區塊
        html += `</div>`;
    });

    $('#buttonList').html(html);

    // 現在載入每個頁面的按鈕
    parentPages.forEach(parentFunc => {
        const parentId = getFuncId(parentFunc);
        const children = parentChildMap[parentId] || [];
        
        // 載入父頁面的按鈕
        loadButtonsForPage(parentId);
        
        // 載入子頁面的按鈕
        children.forEach(childFunc => {
            loadButtonsForPage(getFuncId(childFunc));
        });
    });
}
```

這樣的結構是：

```
┌─────────────────────────────────────┐
│ 父頁面標題 (灰色背景)                │
│ ├─ 父層頁面名稱                     │
│ ├─ 全勾選/全取消 按鈕               │
│ ├─ 父層按鈕列表                     │
│ ├─────── 子頁面分隔線 ──────────    │
│ ├─ 子頁面1                          │
│ │  ├─ 全勾選/全取消                │
│ │  └─ 子頁面1按鈕列表              │
│ ├─ 子頁面2                          │
│ │  ├─ 全勾選/全取消                │
│ │  └─ 子頁面2按鈕列表              │
└─────────────────────────────────────┘
```

父層頁面和父層按鈕都在同一個藍色區塊內，用分隔線將子頁面區域區分開來，但子頁面仍在父層的大區塊內。​​​​​​​​​​​​​​​​