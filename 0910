好👌 我幫你把 功能 4：GetFuncBtn (取得功能頁有權限之按鈕) 寫完整，照著功能 1~3 的風格：

⸻

📌 Model：GetFuncBtnModel.cs

using Newtonsoft.Json;
using System.Collections.Generic;
using System.ComponentModel;

namespace HI_APACCESS_DLL_FRAMEWORK.Models
{
    internal class GetFuncBtnModel
    {
        // ===== 請求參數 =====
        internal class GetFuncBtnRequest
        {
            [JsonProperty]
            [DisplayName("系統ID")]
            internal string SysID { get; set; }

            [JsonProperty]
            [DisplayName("群組ID")]
            internal string GroupID { get; set; }

            [JsonProperty]
            [DisplayName("功能ID")]
            internal string FuncID { get; set; }

            [JsonProperty]
            [DisplayName("環境")]
            internal string Environment { get; set; }
        }

        // ===== 回應結果 =====
        internal class GetFuncBtnResponse
        {
            [JsonProperty]
            [DisplayName("回覆代碼")]
            internal string Result_code { get; set; }

            [JsonProperty]
            [DisplayName("訊息")]
            internal string Msg { get; set; }

            [JsonProperty]
            [DisplayName("回應內容")]
            internal List<ResultData> Result { get; set; }
        }

        internal class ResultData
        {
            [JsonProperty]
            [DisplayName("按鈕ID")]
            internal string BtnID { get; set; }

            [JsonProperty]
            [DisplayName("按鈕名稱")]
            internal string BtnName { get; set; }

            [JsonProperty]
            [DisplayName("控制器")]
            internal string Controller { get; set; }

            [JsonProperty]
            [DisplayName("動作")]
            internal string Action { get; set; }

            [JsonProperty]
            [DisplayName("按鈕位置")]
            internal string BtnLocation { get; set; }

            [JsonProperty]
            [DisplayName("按鈕事件")]
            internal string BtnOnclick { get; set; }
        }
    }
}


⸻

📌 Factory：FGetFuncBtn.cs

using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using HI_APACCESS_DLL_FRAMEWORK.Models;
using HI_APACCESS_DLL_FRAMEWORK.Common;

namespace HI_APACCESS_DLL_FRAMEWORK.Factory
{
    internal class FGetFuncBtn
    {
        internal GetFuncBtnModel.GetFuncBtnResponse Execute(string sysId, string groupId, string funcId, string environment)
        {
            var response = new GetFuncBtnModel.GetFuncBtnResponse();

            try
            {
                // 1. 環境檢查
                if (environment != "TEST" && environment != "PROD")
                {
                    response.Result_code = ErrorCodes.ENV_ERROR;
                    response.Msg = "環境錯誤，只接受 TEST 或 PROD";
                    return response;
                }

                // 2. 系統授權檢查
                var authorizedSystems = FCommon.GetAuthorizedSystemsList(environment);
                if (!authorizedSystems.Contains(sysId))
                {
                    response.Result_code = ErrorCodes.SYS_UNAUTHORIZED;
                    response.Msg = "系統未授權";
                    return response;
                }

                var resultList = new List<GetFuncBtnModel.ResultData>();

                using (SqlConnection conn = new SqlConnection(FCommon.BuildConnectionString(environment)))
                {
                    conn.Open();

                    // 3. 查詢按鈕清單
                    string sql = @"
SELECT DISTINCT
    a.BTNID,
    a.BTN_NAME,
    a.CONTROLLER,
    a.ACTION,
    a.LOC AS BtnLocation,
    a.ONCLICK AS BtnOnclick
FROM [HI_TMMAIN].[dbo].[AP_RFUNC] a
LEFT JOIN [HI_TMMAIN].[dbo].[AP_USER_RFUNC_CONFIG] b 
    ON a.FUNC_ID = b.FUNC_ID
WHERE a.SYS_ID=@SysID 
  AND b.APG_NO=@GroupID
  AND a.FUNC_ID=@FuncID
ORDER BY a.BTNID";

                    using (SqlCommand cmd = new SqlCommand(sql, conn))
                    {
                        cmd.Parameters.AddWithValue("@SysID", sysId);
                        cmd.Parameters.AddWithValue("@GroupID", groupId);
                        cmd.Parameters.AddWithValue("@FuncID", funcId);

                        using (var reader = cmd.ExecuteReader())
                        {
                            while (reader.Read())
                            {
                                resultList.Add(new GetFuncBtnModel.ResultData
                                {
                                    BtnID = reader["BTNID"].ToString(),
                                    BtnName = reader["BTN_NAME"].ToString(),
                                    Controller = reader["CONTROLLER"].ToString(),
                                    Action = reader["ACTION"].ToString(),
                                    BtnLocation = reader["BtnLocation"].ToString(),
                                    BtnOnclick = reader["BtnOnclick"].ToString()
                                });
                            }
                        }
                    }
                }

                // 4. 結果判斷
                if (resultList.Count == 0)
                {
                    response.Result_code = ErrorCodes.NO_PERMISSION;
                    response.Msg = "查無權限";
                }
                else
                {
                    response.Result_code = ErrorCodes.SUCCESS;
                    response.Msg = "成功";
                    response.Result = resultList;
                }
            }
            catch (Exception ex)
            {
                response.Result_code = ErrorCodes.SYSTEM_ERROR;
                response.Msg = "系統錯誤：" + ex.Message;
            }

            return response;
        }
    }
}


⸻

📌 主類別：APACCESS.cs（新增功能 4）

// 功能4：取得功能頁有權限之按鈕
public string GetFuncBtn(string requestJson)
{
    var response = new GetFuncBtnModel.GetFuncBtnResponse();

    try
    {
        var request = JsonConvert.DeserializeObject<GetFuncBtnModel.GetFuncBtnRequest>(requestJson);
        FGetFuncBtn func = new FGetFuncBtn();
        response = func.Execute(request.SysID, request.GroupID, request.FuncID, request.Environment);
    }
    catch (Exception ex)
    {
        response = new GetFuncBtnModel.GetFuncBtnResponse
        {
            Result_code = ErrorCodes.SYSTEM_ERROR,
            Msg = "系統錯誤：" + ex.Message
        };
    }

    return JsonConvert.SerializeObject(response);
}


⸻

✅ 功能 4 完成
	•	Request：SysID, GroupID, FuncID, Environment
	•	Response：按鈕清單 (BtnID, BtnName, Controller, Action, BtnLocation, BtnOnclick)
	•	錯誤處理：環境錯誤、系統未授權、查無權限、系統錯誤

⸻

要不要我直接幫你接著做 功能 5：CheckBtnEnabled (確認是否擁有按鈕權限)？


好👌 我幫你把 功能 5：CheckBtnEnabled (確認是否擁有按鈕權限) 完整寫出來，結構跟前面保持一致。

⸻

📌 Model：CheckBtnEnabledModel.cs

using Newtonsoft.Json;
using System.ComponentModel;

namespace HI_APACCESS_DLL_FRAMEWORK.Models
{
    internal class CheckBtnEnabledModel
    {
        // ===== 請求參數 =====
        internal class CheckBtnEnabledRequest
        {
            [JsonProperty]
            [DisplayName("系統ID")]
            internal string SysID { get; set; }

            [JsonProperty]
            [DisplayName("群組ID")]
            internal string GroupID { get; set; }

            [JsonProperty]
            [DisplayName("功能ID")]
            internal string FuncID { get; set; }

            [JsonProperty]
            [DisplayName("按鈕ID")]
            internal string BtnID { get; set; }

            [JsonProperty]
            [DisplayName("環境")]
            internal string Environment { get; set; }
        }

        // ===== 回應結果 =====
        internal class CheckBtnEnabledResponse
        {
            [JsonProperty]
            [DisplayName("結果")]
            internal bool Result { get; set; }
        }
    }
}


⸻

📌 Factory：FCheckBtnEnabled.cs

using System;
using System.Data.SqlClient;
using HI_APACCESS_DLL_FRAMEWORK.Models;
using HI_APACCESS_DLL_FRAMEWORK.Common;

namespace HI_APACCESS_DLL_FRAMEWORK.Factory
{
    internal class FCheckBtnEnabled
    {
        internal CheckBtnEnabledModel.CheckBtnEnabledResponse Execute(string sysId, string groupId, string funcId, string btnId, string environment)
        {
            var response = new CheckBtnEnabledModel.CheckBtnEnabledResponse();

            try
            {
                // 1. 環境檢查
                if (environment != "TEST" && environment != "PROD")
                {
                    response.Result = false;
                    return response;
                }

                // 2. 系統授權檢查
                var authorizedSystems = FCommon.GetAuthorizedSystemsList(environment);
                if (!authorizedSystems.Contains(sysId))
                {
                    response.Result = false;
                    return response;
                }

                using (SqlConnection conn = new SqlConnection(FCommon.BuildConnectionString(environment)))
                {
                    conn.Open();

                    // 3. 檢查是否擁有按鈕權限
                    string sql = @"
SELECT COUNT(*) AS Cnt
FROM [HI_TMMAIN].[dbo].[AP_USER_RFUNC_CONFIG] a
LEFT JOIN [HI_TMMAIN].[dbo].[AP_RFUNC] b 
    ON a.FUNC_ID = b.FUNC_ID
WHERE a.SYS_ID=@SysID
  AND a.APG_NO=@GroupID
  AND a.FUNC_ID=@FuncID
  AND b.BTNID=@BtnID";

                    using (SqlCommand cmd = new SqlCommand(sql, conn))
                    {
                        cmd.Parameters.AddWithValue("@SysID", sysId);
                        cmd.Parameters.AddWithValue("@GroupID", groupId);
                        cmd.Parameters.AddWithValue("@FuncID", funcId);
                        cmd.Parameters.AddWithValue("@BtnID", btnId);

                        int count = (int)cmd.ExecuteScalar();
                        response.Result = count > 0;
                    }
                }
            }
            catch
            {
                response.Result = false; // 系統錯誤也直接回 false
            }

            return response;
        }
    }
}


⸻

📌 主類別：APACCESS.cs（新增功能 5）

// 功能5：確認是否擁有按鈕權限
public string CheckBtnEnabled(string requestJson)
{
    var response = new CheckBtnEnabledModel.CheckBtnEnabledResponse();

    try
    {
        var request = JsonConvert.DeserializeObject<CheckBtnEnabledModel.CheckBtnEnabledRequest>(requestJson);
        FCheckBtnEnabled func = new FCheckBtnEnabled();
        response = func.Execute(request.SysID, request.GroupID, request.FuncID, request.BtnID, request.Environment);
    }
    catch
    {
        response.Result = false;
    }

    return JsonConvert.SerializeObject(response);
}


⸻

✅ 功能 5 完成
	•	Request：SysID, GroupID, FuncID, BtnID, Environment
	•	Response：{ "Result": true } 或 { "Result": false }
	•	邏輯：
	•	環境錯誤 → false
	•	系統未授權 → false
	•	查不到按鈕 → false
	•	有權限 → true
	•	系統錯誤 → false

⸻

要不要我最後幫你把 功能 1~6 的 Request/Response JSON 範例 全整理一次，方便你之後做測試程式？


