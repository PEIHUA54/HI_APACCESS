👌 好，我幫你整理成一份乾淨的、完整的程式碼，全部串起來（Controller / F_AP / View / JS / Model）。
並且按照你的要求：
	1.	SYS_ID：全部從 Session["SYS_ID"] 取，不再用 BaseController。
	2.	批次匯入：檢查兩個條件
	•	員編必須存在於 [HILIFE_DB3].[DB_SHARE].dbo.[M1EMP_MAST]。
	•	員編不能已存在於該群組 (AP_USER)。
	3.	下載範例檔：從 ~/File/批次匯入使用者範本.xlsx 抓現成檔案。
	4.	View 已包含 批次匯入 Modal，結果以錯誤清單方式顯示。

⸻

① Model

public class UserModel
{
    public string SYS_ID { get; set; }
    public string APG_NO { get; set; }
    public string U_ID { get; set; }
    public string U_NAME { get; set; }
    public string CREATOR { get; set; }
    public DateTime CREATE_TIME { get; set; }
}


⸻

② Controller (APController.cs)

#region 使用者管理

// 批次匯入使用者
[HttpPost]
public JsonResult ImportUsers(HttpPostedFileBase file, string apg_no)
{
    if (file == null || file.ContentLength == 0)
        return Json(new { success = false, message = "請選擇 Excel 檔案" });

    string sysId = Session["SYS_ID"]?.ToString();
    if (string.IsNullOrEmpty(sysId))
        return Json(new { success = false, message = "系統代號不存在，請重新進入群組管理" });

    string uploadDir = Server.MapPath("~/File/Upload");
    if (!Directory.Exists(uploadDir)) Directory.CreateDirectory(uploadDir);

    string filePath = Path.Combine(uploadDir, Path.GetFileName(file.FileName));
    file.SaveAs(filePath);

    try
    {
        var service = GetAPService();
        var result = service.ImportUsers(filePath, sysId, apg_no, Emp_NO);
        return Json(result);
    }
    catch (Exception ex)
    {
        return Json(new { success = false, message = "匯入發生錯誤：" + ex.Message });
    }
    finally
    {
        if (System.IO.File.Exists(filePath))
            System.IO.File.Delete(filePath);
    }
}

// 下載匯入範本
[HttpGet]
public ActionResult DownloadImportTemplate()
{
    string fileName = "批次匯入使用者範本.xlsx";
    string filePath = Server.MapPath("~/File/" + fileName);

    if (!System.IO.File.Exists(filePath))
    {
        return Json(new { success = false, message = "找不到範本檔案" }, JsonRequestBehavior.AllowGet);
    }

    byte[] fileBytes = System.IO.File.ReadAllBytes(filePath);
    return File(fileBytes,
        "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
        fileName);
}

#endregion


⸻

③ F_AP.cs (Service 層)

#region 批次匯入

public object ImportUsers(string filePath, string sysId, string apgNo, string creator)
{
    var errors = new List<string>();
    int successCount = 0;

    string connStr = $@"Provider=Microsoft.ACE.OLEDB.12.0;Data Source={filePath};
                        Extended Properties='Excel 12.0 Xml;HDR=YES;IMEX=1'";

    using (var conn = new OleDbConnection(connStr))
    {
        conn.Open();
        var cmd = new OleDbCommand("SELECT * FROM [Sheet1$]", conn);
        using (var reader = cmd.ExecuteReader())
        {
            int row = 1;
            while (reader.Read())
            {
                row++;
                string empNo = reader["員編"].ToString().Trim();
                if (string.IsNullOrEmpty(empNo)) continue;

                // 1) 檢查員編是否存在 M1EMP_MAST
                if (!CheckEmployeeExists(empNo))
                {
                    errors.Add($"第 {row} 行 {empNo} 不存在於員工資料表");
                    continue;
                }

                // 2) 檢查是否已存在於群組
                if (CheckUserInGroup(sysId, apgNo, empNo))
                {
                    errors.Add($"第 {row} 行 {empNo} 已存在此群組");
                    continue;
                }

                // 3) 寫入
                var emp = GetEmployeeInfo(empNo);
                var model = new UserModel
                {
                    SYS_ID = sysId,
                    APG_NO = apgNo,
                    U_ID = emp.EMP_NO,
                    U_NAME = emp.EMP_NAME,
                    CREATOR = creator
                };
                InsertUser(model, creator);
                successCount++;
            }
        }
    }

    if (errors.Any())
        return new { success = false, message = "匯入完成，但有錯誤", successCount, errors };
    else
        return new { success = true, message = $"成功匯入 {successCount} 筆" };
}

// 檢查員編是否存在 M1EMP_MAST
private bool CheckEmployeeExists(string empNo)
{
    string sql = @"SELECT EMP_NO FROM [HILIFE_DB3].[DB_SHARE].dbo.[M1EMP_MAST] WHERE EMP_NO=@EMP_NO";
    var dt = SVS_DBmanager.QueryBySQL(sql, new List<SqlParameter> { new SqlParameter("@EMP_NO", empNo) });
    return dt.Rows.Count > 0;
}

// 檢查是否已存在於群組
private bool CheckUserInGroup(string sysId, string apgNo, string empNo)
{
    string sql = @"SELECT U_ID FROM [HI_TMMAIN].[dbo].[AP_USER]
                   WHERE SYS_ID=@SYS_ID AND APG_NO=@APG_NO AND U_ID=@U_ID";
    var dt = SVS_DBmanager.QueryBySQL(sql, new List<SqlParameter> {
        new SqlParameter("@SYS_ID", sysId),
        new SqlParameter("@APG_NO", apgNo),
        new SqlParameter("@U_ID", empNo)
    });
    return dt.Rows.Count > 0;
}

#endregion


⸻

④ View (cshtml 片段)

在「管理使用者」區塊的 header 裡補一個 批次匯入按鈕：

<button type="button" class="btn btn-primary" onclick="openImportModal()" id="importUserBtn" disabled>
    <i class="fas fa-file-import"></i> 批次匯入使用者
</button>

新增 Modal：

<div class="modal fade" id="importModal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">批次匯入使用者</h5>
        <button type="button" class="close" data-dismiss="modal">&times;</button>
      </div>
      <div class="modal-body">
        <form id="importForm" enctype="multipart/form-data" method="post">
          <input type="hidden" name="apg_no" id="importGroupNo" />
          <input type="file" class="form-control mb-2" name="file" accept=".xls,.xlsx" required />
          <div class="d-flex justify-content-between">
              <button type="submit" class="btn btn-primary">匯入</button>
              <button type="button" class="btn btn-success" onclick="downloadTemplate()">
                  <i class="fas fa-download"></i> 下載範本
              </button>
          </div>
        </form>
        <div id="importResult" class="mt-3"></div>
      </div>
    </div>
  </div>
</div>


⸻

⑤ JS

function openImportModal() {
    $("#importGroupNo").val($("#groupSelect").val()); // 帶目前選的群組
    $("#importModal").modal("show");
}

function downloadTemplate() {
    window.location.href = '@Url.Action("DownloadImportTemplate","AP")';
}

$("#importForm").submit(function(e){
    e.preventDefault();
    var formData = new FormData(this);
    $.ajax({
        url: '@Url.Action("ImportUsers", "AP")',
        type: 'POST',
        data: formData,
        contentType: false,
        processData: false,
        success: function(res){
            if(res.success){
                $("#importResult").html('<div class="alert alert-success">'+res.message+'</div>');
                loadUsers();
            }else{
                let html = '<div class="alert alert-danger">'+res.message+'</div>';
                if(res.errors){
                    html += '<ul>';
                    res.errors.forEach(err => { html += `<li>${err}</li>`; });
                    html += '</ul>';
                }
                $("#importResult").html(html);
            }
        }
    });
});


⸻

✅ 這樣整理完：
	•	Model：UserModel
	•	Controller：ImportUsers / DownloadImportTemplate
	•	F_AP：ImportUsers + CheckEmployeeExists + CheckUserInGroup
	•	View：批次匯入 Modal + 按鈕
	•	JS：Ajax 上傳、結果顯示

⸻

要不要我幫你在 批次匯入錯誤清單 裡加「表格格式」(行號 / 員編 / 錯誤原因)，而不是單純 <ul>？這樣看起來更整齊。