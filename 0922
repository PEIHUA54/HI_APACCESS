好 ✅ 我幫你把「批次匯入使用者」做成完整版本，按照你的架構分三個部分：
	1.	Controller（APController.cs）
	2.	Service 方法區 (F_AP.cs)
	3.	View (cshtml)

⸻

1️⃣ Controller（APController.cs）

#region 使用者相關 AJAX

// 批次匯入使用者
[HttpPost]
public JsonResult BatchImportUsers(HttpPostedFileBase file, string apg_no)
{
    if (file == null || file.ContentLength == 0)
    {
        return Json(new { success = false, message = "請選擇 Excel 檔案" });
    }

    try
    {
        using (var package = new OfficeOpenXml.ExcelPackage(file.InputStream))
        {
            var ws = package.Workbook.Worksheets.First();
            var rowCount = ws.Dimension.Rows;

            var errorList = new List<string>();
            var successCount = 0;

            var service = GetAPService();

            for (int row = 2; row <= rowCount; row++) // 從第2列開始 (跳過標題)
            {
                var empNo = ws.Cells[row, 1].Text.Trim();
                if (string.IsNullOrEmpty(empNo)) continue;

                // 1️⃣ 檢查是否存在於 M1EMP_MAST
                if (!service.CheckEmployeeExists(empNo))
                {
                    errorList.Add($"第 {row} 行 {empNo} 不存在於 M1EMP_MAST");
                    continue;
                }

                // 2️⃣ 檢查是否已存在於此群組
                if (service.CheckUserInGroup(CurrentSystemId, apg_no, empNo))
                {
                    errorList.Add($"第 {row} 行 {empNo} 員編已存在此群組");
                    continue;
                }

                // 3️⃣ 取得員工資料
                var emp = service.GetEmployeeInfo(empNo);
                if (emp == null)
                {
                    errorList.Add($"第 {row} 行 {empNo} 找不到員工基本資料");
                    continue;
                }

                // 4️⃣ 新增使用者
                var model = new UserModel
                {
                    SYS_ID = CurrentSystemId,
                    APG_NO = apg_no,
                    U_ID = emp.EMP_NO,
                    U_NAME = emp.EMP_NAME
                };
                var result = service.InsertUser(model, Emp_NO);

                if (result != null && result.Contains("fail"))
                {
                    errorList.Add($"第 {row} 行 {empNo} 匯入失敗：{result}");
                }
                else
                {
                    successCount++;
                }
            }

            if (errorList.Any())
            {
                return Json(new
                {
                    success = false,
                    message = $"匯入完成：成功 {successCount} 筆，失敗 {errorList.Count} 筆",
                    errors = errorList
                });
            }

            return Json(new { success = true, message = $"匯入完成，共 {successCount} 筆成功" });
        }
    }
    catch (Exception ex)
    {
        return Json(new { success = false, message = "匯入錯誤：" + ex.Message });
    }
}

#endregion


⸻

2️⃣ Service 方法區（F_AP.cs）

#region 批次匯入檢查

// 檢查員工是否存在於 M1EMP_MAST
public bool CheckEmployeeExists(string empNo)
{
    string sql = @"SELECT COUNT(1) 
                   FROM [HILIFE_DB3].[DB_SHARE].dbo.[M1EMP_MAST] 
                   WHERE EMP_NO = @EMP_NO";
    var parameters = new List<SqlParameter>
    {
        new SqlParameter("@EMP_NO", empNo)
    };

    DataTable dt = SVS_DBmanager.QueryBySQL(sql, parameters);
    return (dt.Rows.Count > 0 && Convert.ToInt32(dt.Rows[0][0]) > 0);
}

// 檢查是否已存在於此群組
public bool CheckUserInGroup(string sysId, string apgNo, string empNo)
{
    string sql = @"SELECT COUNT(1) 
                   FROM [HI_TMMAIN].[dbo].[AP_USER] 
                   WHERE SYS_ID=@SYS_ID AND APG_NO=@APG_NO AND U_ID=@U_ID";
    var parameters = new List<SqlParameter>
    {
        new SqlParameter("@SYS_ID", sysId),
        new SqlParameter("@APG_NO", apgNo),
        new SqlParameter("@U_ID", empNo)
    };

    DataTable dt = SVS_DBmanager.QueryBySQL(sql, parameters);
    return (dt.Rows.Count > 0 && Convert.ToInt32(dt.Rows[0][0]) > 0);
}

#endregion


⸻

3️⃣ View (cshtml)

在「管理使用者」那塊的 新增使用者按鈕旁邊，加一個「批次匯入」：

<div class="section-header">
    <i class="fas fa-users"></i> 管理使用者
    <button type="button" class="btn btn-primary" onclick="openUserModal()" id="addUserBtn" disabled>
        <i class="fas fa-plus"></i> 新增使用者
    </button>
    <button type="button" class="btn btn-success" onclick="openBatchImportModal()" id="batchImportBtn" disabled>
        <i class="fas fa-file-excel"></i> 批次匯入
    </button>
</div>


⸻

批次匯入 Modal

<div class="modal fade" id="batchImportModal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">批次匯入使用者</h5>
        <button type="button" class="close" data-dismiss="modal">&times;</button>
      </div>
      <div class="modal-body">
        <form id="batchImportForm" enctype="multipart/form-data">
          <div class="form-group">
            <label for="importFile">選擇 Excel 檔案 (僅支援 .xlsx)</label>
            <input type="file" class="form-control-file" id="importFile" name="importFile" accept=".xlsx" required>
          </div>
          <small class="text-muted">格式：第一列標題「員編」，下面每列填員工編號</small>
        </form>
        <div id="batchErrorList" class="mt-3 text-danger" style="display:none;"></div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-primary" onclick="submitBatchImport()">匯入</button>
        <button type="button" class="btn btn-secondary" data-dismiss="modal">取消</button>
      </div>
    </div>
  </div>
</div>


⸻

前端 JS

function openBatchImportModal() {
    if (!currentGroup) {
        alert("請先選擇群組");
        return;
    }
    $('#batchImportForm')[0].reset();
    $('#batchErrorList').hide().empty();
    $('#batchImportModal').modal('show');
}

function submitBatchImport() {
    const fileInput = $('#importFile')[0];
    if (!fileInput.files.length) {
        alert("請選擇 Excel 檔案");
        return;
    }

    const formData = new FormData();
    formData.append("file", fileInput.files[0]);
    formData.append("apg_no", currentGroup);

    $.ajax({
        url: '@Url.Action("BatchImportUsers", "AP")',
        type: 'POST',
        data: formData,
        processData: false,
        contentType: false,
        success: function (res) {
            if (res.success) {
                alert(res.message || "匯入成功");
                $('#batchImportModal').modal('hide');
                loadUsers();
            } else {
                let msg = res.message || "匯入失敗";
                if (res.errors && Array.isArray(res.errors)) {
                    msg += "<br/>" + res.errors.join("<br/>");
                }
                $('#batchErrorList').html(msg).show();
            }
        },
        error: function () {
            alert("匯入發生錯誤，請稍後再試");
        }
    });
}


⸻

✅ 整體流程
	1.	使用者點「批次匯入」 → Modal 開啟，上傳 Excel。
	2.	後端逐筆檢查：
	•	不在 M1EMP_MAST → 報錯
	•	已存在群組 → 報錯
	•	其他正常 → 寫入 AP_USER
	3.	前端 Modal 下方顯示錯誤清單，不會只用 alert。

⸻

要不要我幫你把 錯誤清單改成表格（欄位：行號 / 員編 / 錯誤原因），這樣管理者會更清楚？