非常好 👍
你的意思我完全懂：
✅ 要保留這個新版架構（登入先驗身分、再驗權限）
✅ 但「SQL 查詢」部分要改成 用你們慣用的 SVS_DBmanager.QueryBySQL()
✅ 同時 DLL 呼叫部分要保留（功能1～GetUserData 還是照用）

⸻

以下就是 最終整合版本，可以直接貼上使用 👇
（我幫你全改成 SVS_DBmanager 寫法，無 SqlConnection，風格與專案統一）

⸻

✅ 一、修改後完整的 SVS_員工基本資料.cs

using HI_APACCESS_DLL;
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Configuration;
using System.Data;
using System.Data.SqlClient;
using System.Linq;

namespace HI_APACCESS.Service
{
    public class SVS_員工基本資料
    {
        #region AD、員編、 基本資料

        /// <summary>
        /// 權限管理-取得員工AD
        /// </summary>
        internal static string Get_員工AD()
        {
            string EMP_DOM_ID = System.Web.HttpContext.Current.User.Identity.Name
                .Substring(System.Web.HttpContext.Current.User.Identity.Name.LastIndexOf("\\") + 1);

            if (String.IsNullOrEmpty(EMP_DOM_ID))
            {
                var principal = new System.Security.Principal.WindowsPrincipal(
                    System.Security.Principal.WindowsIdentity.GetCurrent());
                string name = principal.Identity.Name;
                string[] adname = name.Split(new string[] { "\\" }, StringSplitOptions.RemoveEmptyEntries);
                EMP_DOM_ID = adname[1].ToString().ToUpper();
            }

            return EMP_DOM_ID;
        }

        /// <summary>
        /// AD 轉換為員編
        /// </summary>
        private static string GetEmpNoByAD(string AD)
        {
            string EMP_NO = null;
            string sql = @"
SELECT EMP_ID 
FROM [HILIFE_MTS].[HI_APUSER].dbo.[NT_EMP] 
WHERE EMP_ID != EMP_DOM_ID
  AND LTRIM(RTRIM(EMP_DOM_ID)) <> '' 
  AND EMP_ID IN (
        SELECT EMP_NO AS EMP_ID 
        FROM [HILIFE_DB3].[DB_SHARE].dbo.[M1EMP_MAST] 
        WHERE END_DT IS NULL
  )
  AND EMP_DOM_ID = @AD ";

            List<SqlParameter> paras = new List<SqlParameter>
            {
                new SqlParameter("@AD", AD)
            };

            DataTable table = new SVS_DBmanager().QueryBySQL(sql, paras);
            if (table.Rows.Count > 0)
                EMP_NO = table.Rows[0]["EMP_ID"].ToString();

            // 找不到就回傳原 AD（相容原流程）
            return String.IsNullOrEmpty(EMP_NO) ? AD : EMP_NO;
        }

        /// <summary>
        /// 權限管理 - 取得員工編號 (舊邏輯)
        /// </summary>
        internal static string Get_員工編號(string AD = null)
        {
            string EMP_NO = string.IsNullOrEmpty(AD) ? Get_員工AD() : AD;
            EMP_NO = GetEmpNoByAD(EMP_NO);
            return EMP_NO;
        }

        // 🟢 新增：只驗身分（登入畫面用，不查權限）
        internal static VM_Employee.VM_員工部門職稱 Get_員工基本資料_只驗身分(string adOrEmp)
        {
            if (string.IsNullOrWhiteSpace(adOrEmp))
                return null;

            // 1️⃣ 嘗試 AD → 員編
            string empNo = GetEmpNoByAD(adOrEmp);

            // 2️⃣ 查人事主檔（有效員工）
            string sql = @"
SELECT TOP 1
    M.EMP_NO,
    M.EMP_NAME,
    M.ORGAN_CAP,
    M.POST_NAME
FROM [HILIFE_DB3].[DB_SHARE].dbo.[M1EMP_MAST] M
WHERE M.EMP_NO = @EMP_NO
  AND (M.END_DT IS NULL OR LTRIM(RTRIM(M.END_DT)) = '')
";
            List<SqlParameter> paras = new List<SqlParameter>
            {
                new SqlParameter("@EMP_NO", empNo)
            };

            DataTable table = new SVS_DBmanager().QueryBySQL(sql, paras);
            if (table == null || table.Rows.Count == 0)
                return null; // 無效員工或離職

            var row = table.Rows[0];
            return new VM_Employee.VM_員工部門職稱
            {
                AD        = adOrEmp.ToUpper(),
                EMP_NO    = row["EMP_NO"].ToString(),
                EMP_NAME  = row["EMP_NAME"].ToString(),
                ORGAN_CAP = row["ORGAN_CAP"].ToString(),
                POST_NAME = row["POST_NAME"].ToString(),
                // 不含 APG_NO（不查權限）
            };
        }

        /// <summary>
        /// 權限管理-取得員工編號 (呼叫 DLL 功能1)
        /// </summary>
        internal static string Get_員工編號_DLL(string ad = null)
        {
            var req = new Models.M_AP_DLL.GetUserDataRequestModel
            {
                SysID = "HI_APACCESS",
                UserAD = string.IsNullOrEmpty(ad) ? Get_員工AD() : ad,
                Environment = EnvHelper.EnvironmentForDll(),
            };

            string json_input = JsonConvert.SerializeObject(req);
            string response = new APACCESS().GetUserData(json_input);
            var res = JsonConvert.DeserializeObject<Models.M_AP_DLL.GetUserDataResponseModel>(response);

            return res?.Result?.UserID ?? req.UserAD;
        }

        /// <summary>
        /// 取得員工基本資料 (呼叫 DLL 功能1，含權限)
        /// </summary>
        internal static VM_Employee.VM_員工部門職稱 Get_員工基本資料(string ad)
        {
            var req = new Models.M_AP_DLL.GetUserDataRequestModel
            {
                SysID = "HI_APACCESS",
                UserAD = ad,
                Environment = EnvHelper.EnvironmentForDll(),
            };

            string json_input = JsonConvert.SerializeObject(req);
            string response = new APACCESS().GetUserData(json_input);
            var res = JsonConvert.DeserializeObject<Models.M_AP_DLL.GetUserDataResponseModel>(response);

            if (res?.Result == null) return null;

            return new VM_Employee.VM_員工部門職稱
            {
                AD = req.UserAD,
                EMP_NO = res.Result.UserID,
                EMP_NAME = res.Result.UserName,
                POST_NAME = res.Result.PostName,
                ORGAN_CAP = res.Result.OrganName,
                APG_NO = res.Result.GroupID
            };
        }

        #endregion

        #region 權限樹（保持原樣）
        internal static List<VM_Employee.WebTree_Node> Get_Tree(string groupId)
        {
            var req = new Models.M_AP_DLL.GetTreeRequestModel
            {
                SysID = "HI_APACCESS",
                GroupID = groupId,
                Environment = EnvHelper.EnvironmentForDll()
            };

            string json_input = JsonConvert.SerializeObject(req);
            string response = new APACCESS().GetTree(json_input);
            var res = JsonConvert.DeserializeObject<Models.M_AP_DLL.GetTreeResponseModel>(response);

            if (res?.Result == null) return new List<VM_Employee.WebTree_Node>();

            var allNodes = res.Result.Select(x => new VM_Employee.WebTree_Node
            {
                FUNC_ID = x.FuncID,
                FUNC_NA = x.FuncName,
                PARENT_ID = x.ParentID,
                VIEW_H = x.Controller,
                VIEW_HB = x.Action,
                SORT_NO = x.Sort.ToString(),
                WebTree = new List<VM_Employee.WebTree_Node>()
            }).ToList();

            var dict = allNodes.ToDictionary(x => x.FUNC_ID, x => x);

            List<VM_Employee.WebTree_Node> roots = new List<VM_Employee.WebTree_Node>();
            foreach (var node in allNodes)
            {
                if (string.IsNullOrEmpty(node.PARENT_ID) || node.PARENT_ID == "HOME")
                    roots.Add(node);
                else if (dict.ContainsKey(node.PARENT_ID))
                    dict[node.PARENT_ID].WebTree.Add(node);
            }

            SortTree(roots);
            return roots;
        }

        private static void SortTree(List<VM_Employee.WebTree_Node> nodes)
        {
            nodes.Sort((a, b) => int.Parse(a.SORT_NO).CompareTo(int.Parse(b.SORT_NO)));
            foreach (var node in nodes)
            {
                if (node.WebTree != null && node.WebTree.Count > 0)
                    SortTree(node.WebTree);
            }
        }
        #endregion
    }
}


⸻

✅ 二、AccountController 修改重點（登入流程）

GET /Login

[AllowAnonymous]
[HttpGet]
public ActionResult Login()
{
    Session.RemoveAll();

    string ad = SVS_員工基本資料.Get_員工AD();
    var login = SVS_員工基本資料.Get_員工基本資料_只驗身分(ad);

    if (login == null)
    {
        ModelState.AddModelError("", "查無有效員工或已離職");
        return View(new VM_員工部門職稱 { AD = ad });
    }

    login.AD = ad;
    return View(login);
}


⸻

POST /Login

[AllowAnonymous]
[HttpPost]
[ValidateAntiForgeryToken]
public ActionResult Login([Bind] VM_員工部門職稱 login, string ReturnUrl)
{
    if (!ModelState.IsValid) return View(login);

    string ad = !string.IsNullOrEmpty(login.AD) ? login.AD : SVS_員工基本資料.Get_員工AD();

    // Step 1: 先驗身分（不查權限）
    var basic = SVS_員工基本資料.Get_員工基本資料_只驗身分(ad);
    if (basic == null)
    {
        ModelState.AddModelError("", "查無有效員工或已離職");
        return View(login);
    }

    // Step 2: 驗權限（呼叫 DLL）
    var withGroup = SVS_員工基本資料.Get_員工基本資料(ad);
    if (withGroup == null || string.IsNullOrEmpty(withGroup.APG_NO))
    {
        ModelState.AddModelError("", "您沒有登入此系統的權限");
        return View(login);
    }

    // Step 3: 登入成功 → 建立票證
    FormsAuthentication.RedirectFromLoginPage(ad, true);
    var encTicket = LoginTicket(ad);
    var authCookie = new HttpCookie(FormsAuthentication.FormsCookieName, encTicket)
    {
        Secure = Request.IsSecureConnection,
        HttpOnly = true
    };
    Response.Cookies.Add(authCookie);

    if (String.IsNullOrEmpty(ReturnUrl) || ReturnUrl == "/")
        return RedirectToAction("Main", "Home");

    if (!Url.IsLocalUrl(ReturnUrl))
        return RedirectToAction("Login", "Account");

    string[] allowedPaths = { "/Main/", "/Home/", "/Account/" };
    if (allowedPaths.Any(path => ReturnUrl.StartsWith(path, StringComparison.OrdinalIgnoreCase)))
        return RedirectToAction("Login", "Account", new { ReturnUrl });

    return RedirectToAction("Login", "Account");
}


⸻

✅ 三、員編驗證Attribute（可選）

如果你希望在輸入員編時不被權限卡住，只驗身分：

if (SVS_員工基本資料.Get_員工基本資料_只驗身分(EmpNo.ToUpper()) == null)
{
    return false;
}


⸻

✅ 最終效果總結

階段	查詢方式	是否呼叫 DLL	說明
登入頁面初次載入 (GET)	Get_員工基本資料_只驗身分	❌ 否	只查員工主檔，人員在職即可
登入送出 (POST)	Get_員工基本資料	✅ 是	確認該員工是否具登入權限
登入成功後	建立 Cookie	—	一切與原本相同


⸻

是否要我幫你順便加上 EnvHelper.EnvironmentForDll() 的完整內容（讓他能正確判斷 TEST/PROD）？