using HI_APACCESS_DLL.Models;
using Microsoft.Data.SqlClient;
using System;
using System.Collections.Generic;
using System.Linq;

namespace HI_APACCESS_DLL.Factory
{
    internal class FGetGroupAllUser
    {
        internal GetGroupAllUserModel.GetGroupAllUserResponse Execute(string sysId, string groupId, bool isIncludeChildGroups, string environment)
        {
            var response = new GetGroupAllUserModel.GetGroupAllUserResponse();

            try
            {
                // 1. 環境檢查
                if (environment != "TEST" && environment != "PROD" && environment != "DEV")
                {
                    response.Result_code = Common.Codes.ENV_ERROR;
                    response.Msg = "環境錯誤，只接受 TEST 或 PROD";
                    return response;
                }

                // 2. 系統授權檢查
                var authorizedSystems = FCommon.GetAuthorizedSystemsList(environment);
                if (!authorizedSystems.Contains(sysId))
                {
                    response.Result_code = Common.Codes.SYS_UNAUTHORIZED;
                    response.Msg = "系統未授權";
                    return response;
                }

                var resultList = new List<GetGroupAllUserModel.ResultData>();

                using (SqlConnection conn = new SqlConnection(FCommon.BuildConnectionString(environment)))
                {
                    conn.Open();

                    // === 群組清單 ===
                    var groupIds = new List<string> { groupId };

                    if (isIncludeChildGroups)
                    {
                        // 修正：PARENT_APG_NO 可能是 "001;002;003" 或含全形分號
                        // 用 token 包邊比對，抓到所有「父清單包含 groupId」的群組編號
                        string sqlChild = @"
SELECT APG_NO
FROM [HI-AUTOS].[dbo].[AP_GROUP]
WHERE SYS_ID = @SysID
  AND (';' + REPLACE(LTRIM(RTRIM(PARENT_APG_NO)),'；',';') + ';') LIKE '%;' + @MY_GID + ';%';";

                        using (SqlCommand cmd = new SqlCommand(sqlChild, conn))
                        {
                            cmd.Parameters.AddWithValue("@SysID", sysId);
                            cmd.Parameters.AddWithValue("@MY_GID", groupId);

                            using (var reader = cmd.ExecuteReader())
                            {
                                while (reader.Read())
                                {
                                    var gid = reader["APG_NO"]?.ToString();
                                    if (!string.IsNullOrWhiteSpace(gid))
                                        groupIds.Add(gid.Trim());
                                }
                            }
                        }
                    }

                    // 去重複、去空白
                    groupIds = groupIds
                        .Where(s => !string.IsNullOrWhiteSpace(s))
                        .Select(s => s.Trim())
                        .Distinct()
                        .ToList();

                    // === 取使用者清單 ===
                    string sqlUser = $@"
SELECT DISTINCT 
    U.U_ID   AS UserID,
    U.U_NAME AS UserName,
    ISNULL(E.EMP_DOM_ID,'') AS UserAD
FROM [HI-AUTOS].[dbo].[AP_USER] U
LEFT JOIN [HILIFE_MTS].[HI_APUSER].dbo.[NT_EMP] E
       ON E.EMP_ID = U.U_ID
WHERE U.SYS_ID = @SysID
  AND U.APG_NO IN ({string.Join(",", groupIds.Select((g, i) => $"@Group{i}"))})
ORDER BY U.U_ID;";

                    using (SqlCommand cmd = new SqlCommand(sqlUser, conn))
                    {
                        cmd.Parameters.AddWithValue("@SysID", sysId);
                        for (int i = 0; i < groupIds.Count; i++)
                            cmd.Parameters.AddWithValue($"@Group{i}", groupIds[i]);

                        using (var reader = cmd.ExecuteReader())
                        {
                            while (reader.Read())
                            {
                                resultList.Add(new GetGroupAllUserModel.ResultData
                                {
                                    UserID = reader["UserID"].ToString(),
                                    UserName = reader["UserName"].ToString(),
                                    UserAD = reader["UserAD"].ToString(),
                                });
                            }
                        }
                    }
                }

                // === 回傳 ===
                if (resultList.Count == 0)
                {
                    response.Result_code = Common.Codes.NO_PERMISSION;
                    response.Msg = "查無人員";
                }
                else
                {
                    response.Result_code = Common.Codes.SUCCESS;
                    response.Msg = "成功";
                    response.Result = resultList;
                }
            }
            catch (Exception ex)
            {
                response.Result_code = Common.Codes.SYSTEM_ERROR;
                response.Msg = "系統錯誤：" + ex.Message;
            }

            return response;
        }
    }
}