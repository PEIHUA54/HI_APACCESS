完美 👍 我懂你意思──不想多一個 class，
直接把「登入時只驗身分、不驗權限」的邏輯，
寫進 SVS_員工基本資料 裡就好。

以下是你完整需要修改／新增的部分，我幫你整合好了（只要貼進去即可）。

✅ 一、修改後完整的 SVS_員工基本資料.cs

你只要用這份覆蓋原本的即可。
（有標註 🟢 新增區塊）

using HI_APACCESS_DLL;
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Configuration;
using System.Data.SqlClient;
using System.Linq;

namespace HI_APACCESS.Service
{
    public class SVS_員工基本資料
    {
        #region AD、員編、 基本資料

        /// <summary>
        /// 權限管理-取得員工AD
        /// </summary>
        /// <returns>AD</returns>
        internal static string Get_員工AD()
        {
            string EMP_DOM_ID = System.Web.HttpContext.Current.User.Identity.Name
                .Substring(System.Web.HttpContext.Current.User.Identity.Name.LastIndexOf("\\") + 1);

            if (String.IsNullOrEmpty(EMP_DOM_ID))
            {
                System.Security.Principal.WindowsPrincipal principal =
                    new System.Security.Principal.WindowsPrincipal(System.Security.Principal.WindowsIdentity.GetCurrent());
                string name = principal.Identity.Name;
                string[] adname = name.Split(new string[] { "\\" }, StringSplitOptions.RemoveEmptyEntries);
                EMP_DOM_ID = adname[1].ToString().ToUpper();
            }

            return EMP_DOM_ID;
        }

        // 🟢 新增：共用連線字串（自動判別測試或正式）
        private static string GetConnString()
        {
            string env = ConfigurationManager.AppSettings["Environment"] ?? "";
            if (env.Contains("HI_APACCESS_TEST", StringComparison.OrdinalIgnoreCase))
                return ConfigurationManager.ConnectionStrings["ConnDB_TFS_HI-AUTOS"].ConnectionString; // 測試
            else
                return ConfigurationManager.ConnectionStrings["ConnDB_DBLS_HI-AUTOS"].ConnectionString; // 正式
        }

        // 🟢 新增：只驗身分（登入畫面用，不查權限）
        internal static VM_Employee.VM_員工部門職稱 Get_員工基本資料_只驗身分(string adOrEmp)
        {
            if (string.IsNullOrWhiteSpace(adOrEmp))
                return null;

            string empNo = null;
            string empName = null;
            string organ = null;
            string post = null;

            using (SqlConnection conn = new SqlConnection(GetConnString()))
            {
                conn.Open();

                // 1️⃣ 先嘗試查 AD → 員編
                string sqlEmp = @"
SELECT TOP 1 E.EMP_ID
FROM [HILIFE_MTS].[HI_APUSER].dbo.[NT_EMP] E
WHERE E.EMP_DOM_ID = @AD
  AND LTRIM(RTRIM(E.EMP_DOM_ID)) <> ''
";
                using (SqlCommand cmd = new SqlCommand(sqlEmp, conn))
                {
                    cmd.Parameters.AddWithValue("@AD", adOrEmp.ToUpper());
                    object result = cmd.ExecuteScalar();
                    if (result != null)
                        empNo = result.ToString();
                }

                // 對不到員編時，直接當成員編查
                if (string.IsNullOrEmpty(empNo))
                    empNo = adOrEmp.ToUpper();

                // 2️⃣ 查基本資料（人事主檔）
                string sqlMast = @"
SELECT TOP 1
    M.EMP_NO,
    M.EMP_NAME,
    M.ORGAN_CAP,
    M.POST_NAME
FROM [HILIFE_DB3].[DB_SHARE].dbo.[M1EMP_MAST] M
WHERE M.EMP_NO = @EMP_NO
  AND (M.END_DT IS NULL OR LTRIM(RTRIM(M.END_DT)) = '')
";
                using (SqlCommand cmd = new SqlCommand(sqlMast, conn))
                {
                    cmd.Parameters.AddWithValue("@EMP_NO", empNo);
                    using (var r = cmd.ExecuteReader())
                    {
                        if (r.Read())
                        {
                            empName = r["EMP_NAME"]?.ToString();
                            organ = r["ORGAN_CAP"]?.ToString();
                            post = r["POST_NAME"]?.ToString();
                        }
                    }
                }
            }

            if (string.IsNullOrEmpty(empName))
                return null;

            return new VM_Employee.VM_員工部門職稱
            {
                AD = adOrEmp.ToUpper(),
                EMP_NO = empNo,
                EMP_NAME = empName,
                ORGAN_CAP = organ,
                POST_NAME = post
                // 不含 APG_NO，因為沒查權限
            };
        }

        /// <summary>
        /// 權限管理-取得員工編號 (呼叫 DLL 功能1)
        /// </summary>
        /// <returns>員編</returns>
        internal static string Get_員工編號(string ad = null)
        {
            var req = new Models.M_AP_DLL.GetUserDataRequestModel
            {
                SysID = "HI_APACCESS",
                UserAD = string.IsNullOrEmpty(ad) ? Get_員工AD() : ad,
                Environment = EnvHelper.EnvironmentForDll(),
            };

            string json_input = JsonConvert.SerializeObject(req);
            string response = new APACCESS().GetUserData(json_input);
            var res = JsonConvert.DeserializeObject<Models.M_AP_DLL.GetUserDataResponseModel>(response);

            return res?.Result?.UserID ?? req.UserAD;
        }

        /// <summary>
        /// 取得員工基本資料 (呼叫 DLL 功能1，含權限)
        /// </summary>
        internal static VM_Employee.VM_員工部門職稱 Get_員工基本資料(string ad)
        {
            var req = new Models.M_AP_DLL.GetUserDataRequestModel
            {
                SysID = "HI_APACCESS",
                UserAD = ad,
                Environment = EnvHelper.EnvironmentForDll(),
            };

            string json_input = JsonConvert.SerializeObject(req);
            string response = new APACCESS().GetUserData(json_input);
            var res = JsonConvert.DeserializeObject<Models.M_AP_DLL.GetUserDataResponseModel>(response);

            if (res?.Result == null) return null;

            return new VM_Employee.VM_員工部門職稱
            {
                AD = req.UserAD,
                EMP_NO = res.Result.UserID,
                EMP_NAME = res.Result.UserName,
                POST_NAME = res.Result.PostName,
                ORGAN_CAP = res.Result.OrganName,
                APG_NO = res.Result.GroupID
            };
        }

        #endregion

        #region 權限樹（保持原樣）
        internal static List<VM_Employee.WebTree_Node> Get_Tree(string groupId)
        {
            var req = new Models.M_AP_DLL.GetTreeRequestModel
            {
                SysID = "HI_APACCESS",
                GroupID = groupId,
                Environment = EnvHelper.EnvironmentForDll()
            };

            string json_input = JsonConvert.SerializeObject(req);
            string response = new APACCESS().GetTree(json_input);
            var res = JsonConvert.DeserializeObject<Models.M_AP_DLL.GetTreeResponseModel>(response);

            if (res?.Result == null) return new List<VM_Employee.WebTree_Node>();

            var allNodes = res.Result.Select(x => new VM_Employee.WebTree_Node
            {
                FUNC_ID = x.FuncID,
                FUNC_NA = x.FuncName,
                PARENT_ID = x.ParentID,
                VIEW_H = x.Controller,
                VIEW_HB = x.Action,
                SORT_NO = x.Sort.ToString(),
                WebTree = new List<VM_Employee.WebTree_Node>()
            }).ToList();

            var dict = allNodes.ToDictionary(x => x.FUNC_ID, x => x);

            List<VM_Employee.WebTree_Node> roots = new List<VM_Employee.WebTree_Node>();
            foreach (var node in allNodes)
            {
                if (string.IsNullOrEmpty(node.PARENT_ID) || node.PARENT_ID == "HOME")
                {
                    roots.Add(node);
                }
                else if (dict.ContainsKey(node.PARENT_ID))
                {
                    dict[node.PARENT_ID].WebTree.Add(node);
                }
            }

            SortTree(roots);

            return roots;
        }

        private static void SortTree(List<VM_Employee.WebTree_Node> nodes)
        {
            nodes.Sort((a, b) => int.Parse(a.SORT_NO).CompareTo(int.Parse(b.SORT_NO)));
            foreach (var node in nodes)
            {
                if (node.WebTree != null && node.WebTree.Count > 0)
                {
                    SortTree(node.WebTree);
                }
            }
        }
        #endregion
    }
}


⸻

✅ 二、修改 AccountController

(1) Login (GET)

改成呼叫「只驗身分」版本：

[AllowAnonymous]
[HttpGet]
public ActionResult Login()
{
    Session.RemoveAll();

    string ad = SVS_員工基本資料.Get_員工AD();
    var login = SVS_員工基本資料.Get_員工基本資料_只驗身分(ad);

    if (login == null)
    {
        ModelState.AddModelError("", "查無有效員工或已離職");
        return View(new VM_員工部門職稱 { AD = ad });
    }

    login.AD = ad;
    return View(login);
}


⸻

(2) Login (POST)

登入後要檢查是否有權限再進系統（DLL 功能1）：

[AllowAnonymous]
[HttpPost]
[ValidateAntiForgeryToken]
public ActionResult Login([Bind] VM_員工部門職稱 login, string ReturnUrl)
{
    if (!ModelState.IsValid) return View(login);

    string ad = !string.IsNullOrEmpty(login.AD) ? login.AD : SVS_員工基本資料.Get_員工AD();

    // Step 1: 先驗身分（不查權限）
    var basic = SVS_員工基本資料.Get_員工基本資料_只驗身分(ad);
    if (basic == null)
    {
        ModelState.AddModelError("", "查無有效員工或已離職");
        return View(login);
    }

    // Step 2: 驗權限（呼叫 DLL）
    var withGroup = SVS_員工基本資料.Get_員工基本資料(ad);
    if (withGroup == null || string.IsNullOrEmpty(withGroup.APG_NO))
    {
        ModelState.AddModelError("", "您沒有登入此系統的權限");
        return View(login);
    }

    // Step 3: 通過後建立登入票證
    FormsAuthentication.RedirectFromLoginPage(ad, true);
    var encTicket = LoginTicket(ad);
    var authCookie = new HttpCookie(FormsAuthentication.FormsCookieName, encTicket)
    {
        Secure = Request.IsSecureConnection,
        HttpOnly = true
    };
    Response.Cookies.Add(authCookie);

    if (String.IsNullOrEmpty(ReturnUrl) || ReturnUrl == "/")
        return RedirectToAction("Main", "Home");

    if (!Url.IsLocalUrl(ReturnUrl))
        return RedirectToAction("Login", "Account");

    string[] allowedPaths = { "/Main/", "/Home/", "/Account/" };
    if (allowedPaths.Any(path => ReturnUrl.StartsWith(path, StringComparison.OrdinalIgnoreCase)))
        return RedirectToAction("Login", "Account", new { ReturnUrl });

    return RedirectToAction("Login", "Account");
}


⸻

✅ 三、驗證 Attribute（可選修改）

如果你想要登入畫面驗證員編時也不被權限擋掉：
請將 員編驗證Attribute 改成用新的「只驗身分」。

if (SVS_員工基本資料.Get_員工基本資料_只驗身分(EmpNo.ToUpper()) == null)
{
    return false;
}


⸻

✅ 最終效果
	•	登入畫面會先用 Get_員工基本資料_只驗身分() → 只查人事表。
	•	若找不到員工 → 顯示「查無有效員工或已離職」。
	•	若找到員工但無權限 → 顯示「您沒有登入此系統的權限」。
	•	有權限的 → 正常登入、建立 Cookie。
	•	不需修改 DLL、不需動其他系統。

⸻

是否要我幫你補上這樣的 員編驗證Attribute 最佳化版本（直接改好用站台版方法）？